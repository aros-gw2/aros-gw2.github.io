{"version":3,"sources":["components/WorldSelector/index.js","components/MatchupLog/index.js","components/DetailedMatchupStats/index.js","components/MatchupStats/index.js","gw2apiModels/Gw2Worlds.js","lib/RequestHandler.js","gw2apiModels/Gw2Guild.js","components/Objectives/Objective.js","components/ObjectiveTooltip/index.js","components/Objectives/Camp.js","components/Objectives/Tower.js","components/Objectives/Keep.js","components/Objectives/Castle.js","App.js","serviceWorker.js","index.js"],"names":["style","selectorContainer","position","top","left","padding","background","borderBottomRightRadius","textAlign","color","fontSize","worldContainer","minWidth","zIndex","WorldSelector","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","_this$props","props","worlds","world","setWorld","linkedWorlds","worldMenuItems","worldId","push","react_default","a","createElement","MenuItem_default","key","value","name","worldNamesGreen","green","map","index","worldNamesBlue","blue","worldNamesRed","red","homeServer","src","alt","verticalAlign","width","marginRight","spanStyle","lineHeight","textShadow","className","join","FormControl_default","variant","InputLabel_default","ref","htmlFor","Select_default","onChange","e","target","input","OutlinedInput_default","labelWidth","id","Component","logContainer","bottom","right","maxHeight","overflowY","MatchupLog","maps","BlueHome","GreenHome","RedHome","Center","dateObj","Date","getHours","slice","getMinutes","getSeconds","_this2","log","objectives","guilds","entryStyle","logRev","concat","reverse","filter","entry","rowStyle","assign","ownerStyle","fontWeight","owner","type","parseDate","flipped","objectiveId","claimed","claimed_by","tag","Transition","Slide_default","direction","FullScreenDialog","open","getFullYear","getMonth","getDate","setState","console","matchup","_id$split","split","_id$split2","slicedToArray","region","tier","i","length","kills","colors","mapsOrdered","rgbaColor","rows","mapId","row","backgroundColor","deaths","Math","round","scores","table","Button_default","onClick","handleClickOpen","Dialog_default","fullWidth","maxWidth","onClose","handleClose","TransitionComponent","DialogContent_default","SnackbarContent_default","amber","aria-describedby","message","display","alignItems","start_time","end_time","Grid_default","container","spacing","item","xs","md","MatchupStats","expanded","elem","document","getElementById","select","execCommand","classNames","statsContainer","statsContainerExpanded","KeyboardArrowRight_default","KeyboardArrowLeft_default","victory_points","colSpan","Divider_default","DetailedMatchupStats_FullScreenDialog","axios","require","gw2apiModels_Gw2Worlds","lang","get","result","data","RequestHandler","config","retry","url","tryCnt","timeout","Error","_context","t0","gw2apiModels_Gw2Guild","Gw2Guild","request","Objective","pulse","diff","getTime","hours","minutes","floor","str","nextProps","nextState","undefined","newOwner","thisObjective","mapOld","idOld","matchupOld","setTimeout","ObjectiveTooltip","Tooltip_default","classes","tooltip","title","placement","children","Camp","_classNames3","claimedBy","pointsTick","objective","_thisObjective","points_tick","last_flipped","yaks_delivered","guildImage","replace","height","parseFlippedTime","ObjectiveTooltip_ObjectiveTooltip","defineProperty","Tower","pulse1","pulse2","Keep","Castle","App","ready","skirmish","skirmishStart","objectivesLastFlipped","objectivesLastClaimed","matchupLog","Gw2Worlds","getAll","newMatchup","getMatchup","skirmishes","startTime","claimed_at","getById","guild","skipFlipped","now","flippedBeforeSec","claimedBeforeSec","parseInt","alert","_iterator","Symbol","iterator","_iteratorNormalCompletion","_step","next","done","match","all_worlds","includes","selectedMatch","matchId","_this3","WorldSelector_WorldSelector","MatchupLog_MatchupLog","MatchupStats_MatchupStats","Camp_Camp","Tower_Tower","Keep_Keep","Castle_Castle","Boolean","window","location","hostname","ReactDOM","render","src_App_0","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.f9dd681f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst style = {\r\n    selectorContainer : {\r\n        position : 'fixed',\r\n        top : '0px',\r\n        left : '0px',\r\n        padding : '10px',\r\n        background : 'rgba(255,255,255,0.2)',\r\n        borderBottomRightRadius : '10px',\r\n        textAlign : 'left',\r\n        color : '#efefef',\r\n        fontSize : '12pt',\r\n    },\r\n    worldContainer :  {\r\n        position : 'fixed',\r\n        top : '0px',\r\n        left : '0px',\r\n        padding : '10px',\r\n        background : 'rgba(0,0,0,0.3)',\r\n        textAlign : 'left',\r\n        color : '#efefef',\r\n        fontSize : '12pt',\r\n        minWidth : '300px',\r\n        zIndex : 100\r\n    },\r\n}\r\n\r\nexport default class WorldSelector extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n        }\r\n    }\r\n    render() {\r\n        let { worlds, world, setWorld, linkedWorlds, color } = this.props;\r\n\r\n        let worldMenuItems = [];\r\n        for(let worldId in worlds) {\r\n            let world = worlds[worldId];\r\n            worldMenuItems.push((<MenuItem key={worldId} value={worldId}>{world.name}</MenuItem>))\r\n        }\r\n\r\n        if(world) {\r\n\r\n            let worldNamesGreen = linkedWorlds.green.map((value, index) => {\r\n                return worlds[value].name;\r\n            });\r\n            let worldNamesBlue = linkedWorlds.blue.map((value, index) => {\r\n                return worlds[value].name;\r\n            });\r\n            let worldNamesRed = linkedWorlds.red.map((value, index) => {\r\n                return worlds[value].name;\r\n            });\r\n            \r\n            let homeServer = (<img src=\"/img/World_Completion.png\" alt=\"homeServer\" style={{ verticalAlign : 'middle', width : '20px', marginRight : '5px'}}/>);\r\n            let spanStyle = {\r\n                fontSize : '20px',\r\n                lineHeight : '30px',\r\n                verticalAlign : 'middle',\r\n                textShadow : 'rgb(0, 0, 0) -1px 0px 1px, rgb(0, 0, 0) 1px 0px 1px, rgb(0, 0, 0) 0px 1px 1px, rgb(0, 0, 0) 0px -1px 1px',\r\n            };\r\n            return (\r\n                <div style={style.worldContainer}>\r\n                    <div className=\"green\">\r\n                        {color === 'green' ? homeServer : \"\"}<span style={spanStyle}>{worldNamesGreen.join(' & ')}</span>\r\n                    </div>\r\n                    <div className=\"blue\">\r\n                        {color === 'blue' ? homeServer : \"\"}<span style={spanStyle}>{worldNamesBlue.join(' & ')}</span>\r\n                    </div>\r\n                    <div className=\"red\">\r\n                        {color === 'red' ? homeServer : \"\"}<span style={spanStyle}>{worldNamesRed.join(' & ')}</span>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {           \r\n            return (\r\n                <div style={style.selectorContainer}>\r\n                    <FormControl variant=\"outlined\" style={{ width : '250px' }}>\r\n                        <InputLabel ref={\"inputLabelRef\"} htmlFor=\"outlined-age-simple\">Choose a world</InputLabel>\r\n                        <Select value={\"dwadawdawd\"} onChange={(e) => {setWorld(e.target.value)}} input={<OutlinedInput labelWidth={250} name=\"world\" id=\"outlined-age-simple\" />}>\r\n                            {worldMenuItems}\r\n                        </Select>\r\n                    </FormControl>     \r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nconst style = {\r\n    logContainer : {\r\n        position : 'fixed',\r\n        bottom : '0px',\r\n        right : '0px',\r\n        maxHeight : '150px',\r\n        width : '500px',\r\n        overflowY : 'auto',\r\n        textAlign : 'left',\r\n        color : '#efefef',\r\n        fontSize : '12pt',\r\n        zIndex : 100\r\n    }\r\n}\r\n\r\nexport default class MatchupLog extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            maps : {\r\n                'BlueHome' : 'BBL',\r\n                'GreenHome' : 'GBL',\r\n                'RedHome' : 'RBL',\r\n                'Center' : 'EBG',\r\n            }\r\n        }\r\n    }\r\n\r\n    parseDate(dateObj) {\r\n        if(typeof dateObj === 'string')\r\n            dateObj = new Date(dateObj);\r\n        \r\n        return ('00' + dateObj.getHours()).slice(-2) + ':' + ('00' + dateObj.getMinutes()).slice(-2)  + ':' + ('00' + dateObj.getSeconds()).slice(-2);\r\n    }\r\n\r\n    render() {\r\n        let { world, log, objectives, guilds } = this.props;\r\n        let { maps } = this.state;\r\n\r\n        let entryStyle = {\r\n            fontSize : '13px',\r\n            background : 'rgba(0,0,0,0.5)',\r\n            padding : '5px',\r\n            color : 'white',\r\n            textShadow: '-1px 0 1px #000, 1px 0 1px #000, 0 1px 1px #000, 0 -1px 1px #000'\r\n        };\r\n\r\n        if(world) {\r\n            let logDup = [].concat(log);\r\n            let logRev = logDup.reverse().filter((entry, index) => {\r\n                if(index < 50)\r\n                    return entry;\r\n            });\r\n            \r\n            return (\r\n                <div style={style.logContainer}>\r\n                    {logRev.map((entry, index) => {\r\n\r\n                        let rowStyle = Object.assign({}, entryStyle);\r\n                        let ownerStyle = {\r\n                            fontWeight : 700,\r\n                        };\r\n\r\n                        switch(entry.map) {\r\n                            case \"RedHome\" : rowStyle.background = \"#ff000020\"; break;\r\n                            case \"BlueHome\" : rowStyle.background = \"#0000ff20\"; break;\r\n                            case \"GreenHome\" : rowStyle.background = \"#00ff0020\"; break;\r\n                            case \"Center\" : rowStyle.background = \"#ffffff20\"; break;\r\n                            default: break;\r\n                        }\r\n\r\n                        switch(entry.owner) {\r\n                            case \"Red\" : ownerStyle.color = \"red\"; break;\r\n                            case \"Blue\" : ownerStyle.color = \"blue\"; break;\r\n                            case \"Green\" : ownerStyle.color = \"green\"; break;\r\n                            default: break;\r\n                        }\r\n\r\n                        if(entry.type === 'flipped')\r\n                            return (<div style={rowStyle}>{maps[entry.map]}: {this.parseDate(entry.flipped)} - <span style={ownerStyle}>{entry.owner}</span> flipped <strong>{objectives[entry.objectiveId].name}</strong></div>)\r\n                        else\r\n                            return (<div style={rowStyle}>{maps[entry.map]}: {this.parseDate(entry.claimed)} - <span style={ownerStyle}>{guilds[entry.claimed_by].name} [{guilds[entry.claimed_by].tag}]</span> claimed <strong>{objectives[entry.objectiveId].name}</strong></div>)\r\n                    })}\r\n                    <div style={entryStyle}>Service started.</div>\r\n                </div>\r\n            )\r\n        } else {           \r\n            return (\r\n                <div style={style.logContainer}>\r\n                   \r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport amber from '@material-ui/core/colors/amber';\r\n\r\nimport './main.css';\r\n\r\nfunction Transition(props) {\r\n  return <Slide direction=\"up\" {...props} />;\r\n}\r\n\r\nexport default class FullScreenDialog extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            open : false,\r\n        }\r\n    }\r\n    \r\n    parseDate(dateObj) {\r\n        if(typeof dateObj === 'string')\r\n            dateObj = new Date(dateObj);\r\n        \r\n        return (dateObj.getFullYear()) + '-' + ('00' + (dateObj.getMonth() + 1)).slice(-2)  + '-' + ('00' + dateObj.getDate()).slice(-2);\r\n    }\r\n\r\n    handleClickOpen() {\r\n        this.setState({open : true});\r\n    }\r\n    \r\n    handleClose() {\r\n        console.log('close')\r\n        this.setState({open : false});\r\n    }\r\n\r\n    render() {\r\n        let { worlds, linkedWorlds, matchup } = this.props;\r\n\r\n        let worldNamesGreen = linkedWorlds.green.map((value, index) => {\r\n            return worlds[value].name;\r\n        });\r\n        let worldNamesBlue = linkedWorlds.blue.map((value, index) => {\r\n            return worlds[value].name;\r\n        });\r\n        let worldNamesRed = linkedWorlds.red.map((value, index) => {\r\n            return worlds[value].name;\r\n        });\r\n        \r\n        let { id } = matchup;\r\n        let [region, tier] = id.split('-');\r\n        let maps = {};\r\n\r\n        for(let i = 0; i < matchup.maps.length; i++)\r\n            maps[matchup.maps[i].type] = matchup.maps[i];\r\n\r\n        console.log(maps, maps.Center.kills.green);\r\n\r\n        let colors = ['red', 'blue', 'green'];\r\n        let mapsOrdered = {};\r\n        let rgbaColor = {\r\n            'red' : '210, 7, 7',\r\n            'blue' : '90, 117, 255',\r\n            'green' : '33, 202, 33'\r\n        };\r\n        for(let i = 0; i < colors.length; i++) {\r\n            let color = colors[i];\r\n            let rows = [];\r\n            for(let mapId in maps) {\r\n                let name;\r\n                switch(mapId) {\r\n                    case 'Center' : name = 'EBG'; break;\r\n                    case 'GreenHome' : name = 'GBL'; break;\r\n                    case 'BlueHome' : name = 'BBL'; break;\r\n                    case 'RedHome' : name = 'RBL'; break;\r\n                    default: break;\r\n                }\r\n\r\n                let row = (\r\n                    <tr>\r\n                        <td>{name}</td>\r\n                        <td>\r\n                            <div className=\"customChip killsDeathsChip\">\r\n                                <span className={`chipLeft`} style={{ backgroundColor : `rgba(${rgbaColor[color]}, ${maps[mapId].kills[color] / (maps[mapId].kills[color] + maps[mapId].deaths[color])})`, width : maps[mapId].kills[color] / (maps[mapId].kills[color] + maps[mapId].deaths[color]) * 100 + '%'}}>{maps[mapId].kills[color]}</span>\r\n                                <span className={`chipRight`} style={{ backgroundColor : `rgba(${rgbaColor[color]}, ${maps[mapId].deaths[color] / (maps[mapId].kills[color] + maps[mapId].deaths[color])})`, width : maps[mapId].deaths[color] / (maps[mapId].kills[color] + maps[mapId].deaths[color]) * 100 + '%'}}>{maps[mapId].deaths[color]}</span>\r\n                            </div>\r\n                        </td>\r\n                        <td>\r\n                            <div className={`customChip ${color}Bg`}>{Math.round(maps[mapId].kills[color] / maps[mapId].deaths[color] * 100) / 100}</div>\r\n                        </td>\r\n                        <td>\r\n                            <div className={`customChip ${color}Bg`}>{Math.round(maps[mapId].kills[color] * 2 / maps[mapId].scores[color] * 10000) / 100 + '%'}</div>\r\n                        </td>\r\n                    </tr>\r\n                );\r\n                rows.push(row);\r\n            }\r\n\r\n            let table = (\r\n                <table className=\"detailedStatsTable\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Border</th>\r\n                            <th>Kills / Deaths</th>\r\n                            <th>KDR</th>\r\n                            <th>PPK</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>     \r\n                        {rows}\r\n                        <tr>\r\n                            <td>Total</td>\r\n                            <td>\r\n                                <div className=\"customChip killsDeathsChip\">\r\n                                    <span className=\"chipLeft\" style={{ backgroundColor : `rgba(${rgbaColor[color]}, ${matchup.kills[color] / (matchup.kills[color] + matchup.deaths[color])})`, width : matchup.kills[color] / (matchup.kills[color] + matchup.deaths[color]) * 100 + '%'}}>{matchup.kills[color]}</span>\r\n                                    <span className=\"chipRight\" style={{ backgroundColor : `rgba(${rgbaColor[color]}, ${matchup.deaths[color] / (matchup.kills[color] + matchup.deaths[color])})`, width : matchup.deaths[color] / (matchup.kills[color] + matchup.deaths[color]) * 100 + '%'}}>{matchup.deaths[color]}</span>\r\n                                </div>       \r\n                            </td>\r\n                            <td>\r\n                                <div className={`customChip ${color}Bg`}>{Math.round(matchup.kills[color] / matchup.deaths[color] * 100) / 100}</div></td>\r\n                            <td>\r\n                                <div className={`customChip ${color}Bg`}>{Math.round(matchup.kills[color] * 2 / matchup.scores[color] * 10000) / 100 + '%'}</div>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            );\r\n\r\n            mapsOrdered[color] = table;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n              <Button onClick={() => {this.handleClickOpen()}}>Show detailed WvW Stats</Button>\r\n              <Dialog style={{ padding : '20px'}} fullWidth={true} maxWidth={'lg'} open={this.state.open} onClose={() => {this.handleClose()}} TransitionComponent={Transition}>   \r\n                    <DialogContent>    \r\n                        <SnackbarContent\r\n                            style={{backgroundColor: amber[700], maxWidth : '100%'}}\r\n                            aria-describedby=\"client-snackbar\"\r\n                            message={\r\n                                <span id=\"client-snackbar\" className={\"warning\"} style={{display: 'flex', alignItems: 'center',}}>\r\n                                    Due to issues with the timing of the Guild Wars 2 API the data shown will not be precise and in realtime.\r\n                                </span>\r\n                            }\r\n                            />\r\n                        <h2>{this.parseDate(new Date(matchup.start_time))} to {this.parseDate(new Date(matchup.end_time))} {region === 2 ? \"NA\" : \"EU\"} Tier {tier}</h2>\r\n                        <div className=\"detailedStatsContainer\">\r\n                            <Grid container spacing={16}>\r\n                                <Grid item xs={12} md={4}>\r\n                                    <div className=\"serverName green\">{worldNamesGreen.join(' & ')}</div>\r\n                                    {mapsOrdered.green}\r\n                                </Grid>\r\n                                <Grid item xs={12} md={4}>\r\n                                    <div className=\"serverName blue\">{worldNamesBlue.join(' & ')}</div>\r\n                                    {mapsOrdered.blue}\r\n                                </Grid>\r\n                                <Grid item xs={12} md={4}>\r\n                                    <div className=\"serverName red\">{worldNamesRed.join(' & ')}</div>\r\n                                    {mapsOrdered.red}\r\n                                </Grid>\r\n                            </Grid>\r\n                        </div>\r\n                    </DialogContent>  \r\n              </Dialog>\r\n            </div>\r\n          );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport ArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport ArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport classNames from 'classnames';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport DetailedMatchupStats from './../DetailedMatchupStats';\r\n\r\nimport './main.css';\r\n\r\nexport default class MatchupStats extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            expanded : true\r\n        }\r\n    }\r\n\r\n    parseDate(dateObj) {\r\n        if(typeof dateObj === 'string')\r\n            dateObj = new Date(dateObj);\r\n        \r\n        return ('00' + dateObj.getHours()).slice(-2) + ':' + ('00' + dateObj.getMinutes()).slice(-2)  + ':' + ('00' + dateObj.getSeconds()).slice(-2);\r\n    }\r\n\r\n    copyToClipboard(id) {\r\n        let elem = document.getElementById(id);\r\n        if(!elem) {\r\n            console.log(id, elem);\r\n            return;\r\n        }\r\n        elem.select();\r\n        document.execCommand(\"copy\");\r\n    }\r\n\r\n    render() {\r\n        let { world, matchup, linkedWorlds, color, worlds } = this.props;\r\n\r\n        \r\n        if(world) {\r\n\r\n            console.log(matchup);\r\n\r\n        let kills = {\r\n            'red' : matchup.kills.red,\r\n            'blue' : matchup.kills.blue,\r\n            'green' : matchup.kills.green,\r\n        };\r\n\r\n        let deaths = {\r\n            'red' : matchup.deaths.red,\r\n            'blue' : matchup.deaths.blue,\r\n            'green' : matchup.deaths.green\r\n        }\r\n\r\n        let worldNamesGreen = linkedWorlds.green.map((value, index) => {\r\n            return worlds[value].name;\r\n        });\r\n        let worldNamesBlue = linkedWorlds.blue.map((value, index) => {\r\n            return worlds[value].name;\r\n        });\r\n        let worldNamesRed = linkedWorlds.red.map((value, index) => {\r\n            return worlds[value].name;\r\n        });\r\n\r\n        let homeServer = (<img src=\"/img/World_Completion.png\" alt=\"homeServer\" style={{ verticalAlign : 'middle', width : '20px', marginRight : '5px'}}/>);\r\n\r\n        return (\r\n                <div className={classNames({\r\n                    \"statsContainer\" : true,\r\n                    \"statsContainerExpanded\" : this.state.expanded\r\n                })}>\r\n                    <div className=\"floatLeft statsExpander\">\r\n                        <Button onClick={() => {\r\n                            this.setState({\r\n                                expanded : !this.state.expanded\r\n                            })\r\n                        }}>\r\n                            {this.state.expanded ? <ArrowRight/> : <ArrowLeft/>}\r\n                        </Button>\r\n                    </div>\r\n                    <table className=\"floatLeft statsTable\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Server</th>\r\n                                    <th>VP</th>\r\n                                    <th>Kills</th>\r\n                                    <th>Deaths</th>\r\n                                    <th>KDR</th>\r\n                                    <th>PPK</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        <div className=\"green\">\r\n                                            {color === 'green' ? homeServer : \"\"}<span>{worldNamesGreen.join(' & ')}</span>\r\n                                        </div>  \r\n                                    </td>\r\n                                    <td>\r\n                                        {matchup.victory_points.green}\r\n                                    </td>\r\n                                    <td>\r\n                                        {kills.green}\r\n                                    </td>\r\n                                    <td>\r\n                                        {deaths.green}\r\n                                    </td>\r\n                                    <td>\r\n                                        {Math.round(kills.green / deaths.green * 100) / 100 }\r\n                                    </td>\r\n                                    <td>\r\n                                        {Math.round(kills.green * 2 / matchup.scores.green * 10000) / 100 }%\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>\r\n                                        <div className=\"blue\">\r\n                                            {color === 'blue' ? homeServer : \"\"}<span>{worldNamesBlue.join(' & ')}</span>\r\n                                        </div>  \r\n                                    </td>\r\n                                    <td>\r\n                                        {matchup.victory_points.blue}\r\n                                    </td>\r\n                                    <td>\r\n                                        {kills.blue}\r\n                                    </td>\r\n                                    <td>\r\n                                        {deaths.blue}\r\n                                    </td>\r\n                                    <td>\r\n                                        {Math.round(kills.blue / deaths.blue * 100) / 100 }\r\n                                    </td>\r\n                                    <td>\r\n                                        {Math.round(kills.blue * 2 / matchup.scores.blue * 10000) / 100 }%\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>\r\n                                        <div className=\"red\">\r\n                                            {color === 'red' ? homeServer : \"\"}<span>{worldNamesRed.join(' & ')}</span>\r\n                                        </div>  \r\n                                    </td>\r\n                                    <td>\r\n                                        {matchup.victory_points.red}\r\n                                    </td>\r\n                                    <td>\r\n                                        {kills.red}\r\n                                    </td>\r\n                                    <td>\r\n                                        {deaths.red}\r\n                                    </td>\r\n                                    <td>\r\n                                        {Math.round(kills.red / deaths.red * 100) / 100 }\r\n                                    </td>\r\n                                    <td>\r\n                                        {Math.round(kills.red * 2 / matchup.scores.red * 10000) / 100 }%\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td colSpan={6}><Divider/></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td colSpan={6} style={{ textAlign : 'right' }}>\r\n                                        <DetailedMatchupStats color={this.props.color} worlds={this.props.worlds} linkedWorlds={this.props.linkedWorlds} world={this.props.world} matchup={this.props.matchup}/>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                </div>\r\n            )\r\n        } else {           \r\n            return (\r\n                <div></div>\r\n            );\r\n        }\r\n    }\r\n}","const axios = require('axios');\r\n\r\nclass Gw2Worlds {\r\n    async getById(id, lang = 'en') {\r\n        let result = await axios.get(`https://api.guildwars2.com/v2/worlds?lang=${lang}&id=${id}`);\r\n        return result.data;\r\n    }\r\n\r\n    async getAll(lang = 'en') {\r\n        let result = await axios.get(`https://api.guildwars2.com/v2/worlds?lang=${lang}&ids=all`);\r\n        return result.data;\r\n    }\r\n}\r\n\r\nexport default new Gw2Worlds();","import axios from 'axios';\r\n\r\nexport default class RequestHandler {\r\n    constructor(config) {\r\n        this.config = Object.assign({\r\n            retry : 3\r\n        }, config);\r\n    }\r\n\r\n    async get(url, tryCnt = 0) {\r\n        try {\r\n            let result = await axios.get(url, {\r\n                timeout : 5000\r\n            });\r\n            return result.data;\r\n        } catch(error) {\r\n            if(tryCnt < this.config.retry - 1) \r\n                return await this.get(url, ++tryCnt)\r\n            else\r\n                return new Error(error);\r\n        }\r\n    }\r\n\r\n    post() {}\r\n\r\n    put() {}\r\n\r\n    delete() {}\r\n}","import RequestHandler from './../lib/RequestHandler';\r\n\r\nclass Gw2Guild {\r\n    constructor() {\r\n        this.request = new RequestHandler();\r\n    }\r\n\r\n    async getById(id, lang = 'en') {\r\n        let result = await this.request.get(`https://api.guildwars2.com/v2/guild/${id}?lang=${lang}`);\r\n        return result;\r\n    }\r\n\r\n}\r\n\r\nexport default new Gw2Guild();","import React, { Component } from 'react';\r\n\r\nexport default class Objective extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            pulse : false\r\n        }\r\n    }\r\n\r\n    parseDate(dateObj) {\r\n        if(typeof dateObj === 'string')\r\n            dateObj = new Date(dateObj);\r\n        \r\n        return ('00' + dateObj.getHours()).slice(-2) + ':' + ('00' + dateObj.getMinutes()).slice(-2)  + ':' + ('00' + dateObj.getSeconds()).slice(-2);\r\n    }\r\n\r\n    parseFlippedTime(dateObj) {\r\n        if(typeof dateObj === 'string')\r\n            dateObj = new Date(dateObj);\r\n        \r\n        let now = new Date();\r\n        let diff = now.getTime() - dateObj.getTime();\r\n        diff /= 1000;\r\n        let hours = 0, minutes = 0;\r\n        if(diff > 3600) {\r\n            hours = Math.floor(diff / 3600);\r\n            diff = diff % 3600;\r\n        }\r\n        if(diff > 60) {\r\n            minutes = Math.floor(diff / 60);\r\n            diff = diff % 60;\r\n        }\r\n\r\n        let str = '';\r\n\r\n        if(hours)\r\n            str += `${hours} hours`;\r\n\r\n        if(hours && minutes)\r\n            str += ' and';\r\n\r\n        str += ` ${minutes} minutes`;\r\n        return str;\r\n    }\r\n\r\n    static componentWillReceiveProps(nextProps, nextState) {\r\n        \r\n        if(this.props.matchup.id === undefined)\r\n            return;\r\n\r\n        let { map, id, matchup } = nextProps;\r\n        let owner;\r\n        let newOwner;\r\n        if(matchup.maps) {\r\n            let thisObjective;\r\n            for(let i = 0; i < matchup.maps.length; i++)\r\n                if(matchup.maps[i].type === map) {\r\n                    for(let a = 0; a < matchup.maps[i].objectives.length; a++)\r\n                        if(matchup.maps[i].objectives[a].id === id)\r\n                            thisObjective = matchup.maps[i].objectives[a];\r\n                }\r\n\r\n            owner = thisObjective.owner;\r\n        }\r\n\r\n        let mapOld = this.props.map;\r\n        let idOld = this.props.id;\r\n        let matchupOld = this.props.matchup;\r\n\r\n        if(matchupOld.maps) {\r\n            let thisObjective;\r\n            for(let i = 0; i < matchupOld.maps.length; i++)\r\n                if(matchupOld.maps[i].type === mapOld) {\r\n                    for(let a = 0; a < matchupOld.maps[i].objectives.length; a++)\r\n                        if(matchupOld.maps[i].objectives[a].id === idOld)\r\n                            thisObjective = matchupOld.maps[i].objectives[a];\r\n                }\r\n\r\n            newOwner = thisObjective.owner;\r\n        }\r\n\r\n        if(owner !== newOwner) {\r\n            this.setState({ pulse : true }, () => {\r\n            });\r\n            setTimeout(() => {\r\n                this.setState({ pulse : false }, () => {\r\n                });\r\n            }, 10000);\r\n        }\r\n    }\r\n\r\n    render() {    \r\n        return (<div></div>);\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport './main.css';\r\n\r\nexport default class ObjectiveTooltip extends Component {\r\n    render() {\r\n        return (\r\n            <Tooltip classes={{ tooltip : 'objectiveTooltip' }} title={(<div>{this.props.title}</div>)} placement=\"top\">\r\n                {this.props.children}\r\n            </Tooltip>\r\n            )\r\n    }\r\n\r\n\r\n}","import React from 'react';\r\nimport Objective from './Objective';\r\nimport classNames from 'classnames';\r\nimport Tooltip from './../ObjectiveTooltip';\r\n\r\nexport default class Camp extends Objective {\r\n    render() {    \r\n        let { map, objectives, id, matchup, top, left, guilds } = this.props;\r\n        let color = 'greyBg';\r\n        let pointsTick = 0;\r\n        let claimedBy;\r\n        let newOwner;\r\n        let tooltip = [];\r\n        if(matchup.maps) {\r\n            let objective = objectives[id];\r\n            let thisObjective;\r\n            for(let i = 0; i < matchup.maps.length; i++)\r\n                if(matchup.maps[i].type === map) {\r\n                    for(let a = 0; a < matchup.maps[i].objectives.length; a++)\r\n                        if(matchup.maps[i].objectives[a].id === id)\r\n                            thisObjective = matchup.maps[i].objectives[a];\r\n                }\r\n\r\n            let { owner, points_tick, claimed_by, last_flipped, yaks_delivered } = thisObjective;\r\n            pointsTick = points_tick;\r\n            newOwner = owner;\r\n            claimedBy = claimed_by;\r\n            switch(owner) {\r\n                case 'Red' : color = 'redBg'; break;\r\n                case 'Blue' : color = 'blueBg'; break;\r\n                case 'Green' : color = 'greenBg'; break;\r\n                default : color = 'greyBg';\r\n            }\r\n\r\n            tooltip.push(<div>{objective.name}</div>);\r\n            if(claimed_by && guilds[claimed_by]) {\r\n                let guild = guilds[claimed_by];\r\n                let guildImage = guild.name.replace(/ /g, '-');\r\n                tooltip.push(\r\n                    <div>\r\n                        <span>Claimed by:</span><br/>\r\n                        <div style={{height : '160px', width : '160px'}}><img src={`https://guilds.gw2w2w.com/guilds/${guildImage}/160.svg`} alt=\"Guild\"/></div>\r\n                        <span>{guilds[claimed_by].name} [{guilds[claimed_by].tag}]</span>\r\n                    </div>\r\n                );\r\n            }\r\n            tooltip.push(<div>Flipped {this.parseFlippedTime(new Date(last_flipped))} ago.</div>);\r\n            tooltip.push(<div>Dolyaks: {yaks_delivered} / 140</div>);\r\n            tooltip.push(<div>Points per Tick: {points_tick}</div>);\r\n        }\r\n\r\n        return (\r\n            <Tooltip title={(<div>{tooltip}</div>)}>\r\n            <div className=\"objectiveContainer\" style={{\r\n                top : top,\r\n                left : left,\r\n            }}>\r\n                <div className={classNames({\r\n                    [`pulse1${newOwner}`] : this.state.pulse\r\n                })}/>\r\n                <div className={classNames({\r\n                    [`pulse2${newOwner}`] : this.state.pulse\r\n                })}/>\r\n                   <img className={classNames({\r\n                       [color] : true,\r\n                       'objective' : true\r\n                   })} src=\"/img/camp.png\" alt=\"Camp\"/>\r\n                   {pointsTick === 4 ? <img src=\"/img/Reinforced.png\" alt=\"Reinforced\" className=\"reinforced\"/> : \"\"}\r\n                   {pointsTick === 3 ? <img src=\"/img/Secured.png\" alt=\"Secured\" className=\"secured\"/> : \"\"}\r\n                   {claimedBy ? <img src=\"/img/claimed.png\" alt=\"claimed\" className=\"claimed\"/> : \"\"}\r\n                </div>\r\n                </Tooltip>\r\n            )\r\n\r\n    }\r\n}","import React from 'react';\r\nimport Objective from './Objective';\r\nimport classNames from 'classnames';\r\nimport Tooltip from './../ObjectiveTooltip';\r\n\r\nexport default class Tower extends Objective {\r\n    render() {    \r\n        let { map, objectives, id, matchup, top, left, guilds } = this.props;\r\n        let color = 'greyBg';\r\n        let pointsTick = 0;\r\n        let claimedBy;\r\n        let newOwner;\r\n        let tooltip = [];\r\n        if(matchup.maps) {\r\n            let objective = objectives[id];\r\n            let thisObjective;\r\n            for(let i = 0; i < matchup.maps.length; i++)\r\n                if(matchup.maps[i].type === map) {\r\n                    for(let a = 0; a < matchup.maps[i].objectives.length; a++)\r\n                        if(matchup.maps[i].objectives[a].id === id)\r\n                            thisObjective = matchup.maps[i].objectives[a];\r\n                }\r\n\r\n            let { owner, points_tick, claimed_by, last_flipped, yaks_delivered } = thisObjective;\r\n            pointsTick = points_tick;\r\n            newOwner = owner;\r\n            claimedBy = claimed_by;\r\n            switch(owner) {\r\n                case 'Red' : color = 'redBg'; break;\r\n                case 'Blue' : color = 'blueBg'; break;\r\n                case 'Green' : color = 'greenBg'; break;\r\n                default : color = 'greyBg';\r\n            }\r\n\r\n            tooltip.push(<div>{objective.name}</div>);\r\n            if(claimed_by && guilds[claimed_by]) {\r\n                let guild = guilds[claimed_by];\r\n                let guildImage = guild.name.replace(/ /g, '-');\r\n                tooltip.push(\r\n                    <div>\r\n                        <span>Claimed by:</span><br/>\r\n                        <div style={{height : '160px', width : '160px'}}><img src={`https://guilds.gw2w2w.com/guilds/${guildImage}/160.svg`} alt=\"Guild\"/></div>\r\n                        <span>{guilds[claimed_by].name} [{guilds[claimed_by].tag}]</span>\r\n                    </div>\r\n                );\r\n            }\r\n            tooltip.push(<div>Flipped {this.parseFlippedTime(new Date(last_flipped))} ago.</div>);\r\n            tooltip.push(<div>Dolyaks: {yaks_delivered} / 140</div>);\r\n            tooltip.push(<div>Points per Tick: {points_tick}</div>);\r\n        }\r\n        let pulse1 = classNames({\r\n            [`pulse1${newOwner}`] : this.state.pulse\r\n        });\r\n\r\n        let pulse2 = classNames({\r\n            [`pulse2${newOwner}`] : this.state.pulse\r\n        });\r\n\r\n        return (\r\n            <Tooltip title={(<div>{tooltip}</div>)}>\r\n            <div className=\"objectiveContainer\" style={{\r\n                top : top,\r\n                left : left,\r\n            }}>\r\n                <div className={pulse1}/>\r\n                <div className={pulse2}/>\r\n                   <img className={classNames({\r\n                       [color] : true,\r\n                       'objective' : true\r\n                   })} src=\"/img/tower.png\" alt=\"Tower\"/>\r\n                   {pointsTick === 10 ? <img src=\"/img/Fortified.png\" alt=\"Fortified\" className=\"fortified\"/> : \"\"}\r\n                   {pointsTick === 8 ? <img src=\"/img/Reinforced.png\" alt=\"Reinforced\" className=\"reinforced\"/> : \"\"}\r\n                   {pointsTick === 6 ? <img src=\"/img/Secured.png\" alt=\"Secured\" className=\"secured\"/> : \"\"}\r\n                   {claimedBy ? <img src=\"/img/claimed.png\" alt=\"claimed\" className=\"claimed\"/> : \"\"}\r\n                </div>\r\n                </Tooltip>\r\n            )\r\n\r\n    }\r\n}","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport Tooltip from './../ObjectiveTooltip';\r\nimport Objective from './Objective';\r\n\r\nexport default class Keep extends Objective {\r\n    render() {    \r\n        let { map, objectives, id, matchup, top, left, guilds } = this.props;\r\n        let color = 'greyBg';\r\n        let pointsTick = 0;\r\n        let claimedBy;\r\n        let newOwner;\r\n        let tooltip = [];\r\n        if(matchup.maps) {\r\n            let objective = objectives[id];\r\n            let thisObjective;\r\n            for(let i = 0; i < matchup.maps.length; i++)\r\n                if(matchup.maps[i].type === map) {\r\n                    for(let a = 0; a < matchup.maps[i].objectives.length; a++)\r\n                        if(matchup.maps[i].objectives[a].id === id)\r\n                            thisObjective = matchup.maps[i].objectives[a];\r\n                }\r\n\r\n            let { owner, points_tick, claimed_by, last_flipped, yaks_delivered } = thisObjective;\r\n            pointsTick = points_tick;\r\n            newOwner = owner;\r\n            claimedBy = claimed_by;\r\n            switch(owner) {\r\n                case 'Red' : color = 'redBg'; break;\r\n                case 'Blue' : color = 'blueBg'; break;\r\n                case 'Green' : color = 'greenBg'; break;\r\n                default : color = 'greyBg';\r\n            }\r\n\r\n            tooltip.push(<div>{objective.name}</div>);\r\n            if(claimed_by && guilds[claimed_by]) {\r\n                let guild = guilds[claimed_by];\r\n                let guildImage = guild.name.replace(/ /g, '-');\r\n                tooltip.push(\r\n                    <div>\r\n                        <span>Claimed by:</span><br/>\r\n                        <div style={{height : '160px', width : '160px'}}><img src={`https://guilds.gw2w2w.com/guilds/${guildImage}/160.svg`} alt=\"Guild\"/></div>\r\n                        <span>{guilds[claimed_by].name} [{guilds[claimed_by].tag}]</span>\r\n                    </div>\r\n                );\r\n            }\r\n            tooltip.push(<div>Flipped {this.parseFlippedTime(new Date(last_flipped))} ago.</div>);\r\n            tooltip.push(<div>Dolyaks: {yaks_delivered} / 140</div>);\r\n            tooltip.push(<div>Points per Tick: {points_tick}</div>);\r\n        }\r\n\r\n        return (\r\n            <Tooltip title={(<div>{tooltip}</div>)}>\r\n            <div className=\"objectiveContainer\" style={{\r\n                    top : top,\r\n                    left : left,\r\n                }}>\r\n                    <div className={classNames({\r\n                        [`pulse1${newOwner}`] : this.state.pulse\r\n                    })}/>\r\n                    <div className={classNames({\r\n                        [`pulse2${newOwner}`] : this.state.pulse\r\n                    })}/>\r\n                    <img className={classNames({\r\n                        [color] : true,\r\n                        'objective' : true,\r\n                    })} src=\"/img/keep.png\" alt=\"Keep\"/>\r\n                    {pointsTick === 20 ? <img src=\"/img/waypoint.png\" alt=\"waypoint\" className=\"waypoint\"/> : \"\"}\r\n                    {pointsTick === 20 ? <img src=\"/img/Fortified.png\" alt=\"Fortified\" className=\"fortified\"/> : \"\"}\r\n                    {pointsTick === 16 ? <img src=\"/img/Reinforced.png\" alt=\"Reinforced\" className=\"reinforced\"/> : \"\"}\r\n                    {pointsTick === 12 ? <img src=\"/img/Secured.png\" alt=\"Secured\" className=\"secured\"/> : \"\"}\r\n                    {claimedBy ? <img src=\"/img/claimed.png\" alt=\"claimed\" className=\"claimed\"/> : \"\"}\r\n                </div>\r\n            </Tooltip>\r\n        )\r\n\r\n\r\n    }\r\n}","import React from 'react';\r\nimport Objective from './Objective';\r\nimport classNames from 'classnames';\r\nimport Tooltip from './../ObjectiveTooltip';\r\n\r\nexport default class Castle extends Objective {\r\n    render() {    \r\n        let { map, objectives, id, matchup, top, left, guilds } = this.props;\r\n        let color = 'greyBg';\r\n        let pointsTick = 0;\r\n        let claimedBy;\r\n        let newOwner;\r\n        let tooltip = [];\r\n        if(matchup.maps) {\r\n            let objective = objectives[id];\r\n            let thisObjective;\r\n            for(let i = 0; i < matchup.maps.length; i++)\r\n                if(matchup.maps[i].type === map) {\r\n                    for(let a = 0; a < matchup.maps[i].objectives.length; a++)\r\n                        if(matchup.maps[i].objectives[a].id === id)\r\n                            thisObjective = matchup.maps[i].objectives[a];\r\n                }\r\n\r\n            let { owner, points_tick, claimed_by, last_flipped, yaks_delivered } = thisObjective;\r\n            pointsTick = points_tick;\r\n            newOwner = owner;\r\n            claimedBy = claimed_by;\r\n            switch(owner) {\r\n                case 'Red' : color = 'redBg'; break;\r\n                case 'Blue' : color = 'blueBg'; break;\r\n                case 'Green' : color = 'greenBg'; break;\r\n                default : color = 'greyBg';\r\n            }\r\n\r\n            tooltip.push(<div>{objective.name}</div>);\r\n            if(claimed_by && guilds[claimed_by]) {\r\n                let guild = guilds[claimed_by];\r\n                let guildImage = guild.name.replace(/ /g, '-');\r\n                tooltip.push(\r\n                    <div>\r\n                        <span>Claimed by:</span><br/>\r\n                        <div style={{height : '160px', width : '160px'}}><img src={`https://guilds.gw2w2w.com/guilds/${guildImage}/160.svg`} alt=\"Guild\"/></div>\r\n                        <span>{guilds[claimed_by].name} [{guilds[claimed_by].tag}]</span>\r\n                    </div>\r\n                );\r\n            }\r\n            tooltip.push(<div>Flipped {this.parseFlippedTime(new Date(last_flipped))} ago.</div>);\r\n            tooltip.push(<div>Dolyaks: {yaks_delivered} / 140</div>);\r\n            tooltip.push(<div>Points per Tick: {points_tick}</div>);\r\n        }\r\n\r\n\r\n        return (\r\n            <Tooltip title={(<div>{tooltip}</div>)}>\r\n            <div className=\"objectiveContainer\" style={{\r\n                top : top,\r\n                left : left,\r\n            }}>\r\n                <div className={classNames({\r\n                    [`pulse1${newOwner}`] : this.state.pulse\r\n                })}/>\r\n                <div className={classNames({\r\n                    [`pulse2${newOwner}`] : this.state.pulse\r\n                })}/>\r\n                   <img className={classNames({\r\n                       [color] : true,\r\n                       'objective' : true\r\n                   })} src=\"/img/castle.png\" alt=\"Castle\"/>\r\n                    {pointsTick === 20 ? <img src=\"/img/waypoint.png\" alt=\"waypoint\" className=\"waypoint\"/> : \"\"}\r\n                    {pointsTick === 32 ? <img src=\"/img/Fortified.png\" alt=\"Fortified\" className=\"fortified\"/> : \"\"}\r\n                    {pointsTick === 24 ? <img src=\"/img/Reinforced.png\" alt=\"Reinforced\" className=\"reinforced\"/> : \"\"}\r\n                    {pointsTick === 16 ? <img src=\"/img/Secured.png\" alt=\"Secured\" className=\"secured\"/> : \"\"}\r\n                   {claimedBy ? <img src=\"/img/claimed.png\" alt=\"claimed\" className=\"claimed\"/> : \"\"}\r\n                </div>\r\n                </Tooltip>\r\n            )\r\n\r\n    }\r\n}","import React, { Component } from 'react';\nimport './App.css';\nimport WorldSelector from './components/WorldSelector';\nimport MatchupLog from './components/MatchupLog';\nimport MatchupStats from './components/MatchupStats';\nimport Gw2Worlds from './gw2apiModels/Gw2Worlds';\nimport Gw2Guild from './gw2apiModels/Gw2Guild';\n\nimport RequestHandler from './lib/RequestHandler';\n\nimport Camp from './components/Objectives/Camp';\nimport Tower from './components/Objectives/Tower';\nimport Keep from './components/Objectives/Keep';\nimport Castle from './components/Objectives/Castle';\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            objectives : {},\n            guilds : {},\n            world : 0,\n            linkedWorlds : [],\n            worlds : {},\n            ready : 0,\n            region : 0,\n            tier : 0,\n            color : '',\n            matchup : {},\n            skirmish : {},\n            skirmishStart : 0,\n            timeout : null,\n            objectivesLastFlipped : {},\n            objectivesLastClaimed : {},\n            matchupLog : [],\n        };\n        this.request = new RequestHandler();\n    }\n\n    async componentDidMount() {\n        let result = await Gw2Worlds.getAll();\n        let worlds = {};\n        for(let index in result) {\n            let world = result[index];\n            worlds[world.id] = world;\n        }\n\n        result = await this.request.get(`https://api.guildwars2.com/v2/wvw/objectives?ids=all&lang=en`);\n        let objectives = {};\n\n        for(let index in result) {\n            let objective = result[index];\n            objectives[objective.id] = objective;\n        }\n\n        this.setState({ worlds : worlds, objectives : objectives, ready : 1 });\n        //this.setWorld(2201);\n    }\n\n    async getMatchup() {\n        let { region, tier, matchup, world, objectivesLastClaimed, objectivesLastFlipped, matchupLog, guilds } = this.state;\n        let newMatchup, skirmishStart, skirmish;\n        if(region && tier) {\n            newMatchup = await this.request.get(`https://api.guildwars2.com/v2/wvw/matches?id=${region}-${tier}`);\n\n            if(newMatchup instanceof Error) {\n                let timeout = setTimeout(() => {\n                    this.getMatchup();\n                }, 10000);\n                this.setState({ timeout : timeout });\n                return;\n            }\n\n            console.log(matchup, newMatchup);\n\n            if(matchup.start_time !== newMatchup.start_time) {\n                console.log('reset matchup');\n                // reset matchup\n                skirmish = newMatchup;\n                matchup = newMatchup;\n                this.setWorld(world);\n                return;\n            }\n\n            if(matchup.skirmishes.length !== newMatchup.skirmishes.length) {\n                console.log('reset skirmish');\n                skirmish = newMatchup;\n                matchup = newMatchup;\n            }\n\n            let { start_time, maps } = newMatchup;\n            let startTime = new Date(start_time);\n            skirmishStart = new Date(startTime.getTime() + ((newMatchup.skirmishes.length - 1) * 2 * 60 * 60 * 1000));\n            for(let mapId in maps) {\n                let map = maps[mapId];\n                let { objectives } = map;\n                for (let i = 0; i < objectives.length; i++) {\n                    let objective = objectives[i];\n                    let {\n                        id,\n                        owner,\n                        last_flipped,\n                        claimed_by,\n                        claimed_at\n                    } = objective;\n                    let index = `${id}`;\n    \n                    if(claimed_by && !guilds[claimed_by]) {\n                        let guild = await Gw2Guild.getById(claimed_by);\n                        guilds[claimed_by] = guild;\n                    }\n                    // last flipped\n                    let skipFlipped = false;\n                    if (!objectivesLastFlipped[index]) {\n                        objectivesLastFlipped[index] = new Date(last_flipped);\n                        if (claimed_at)\n                            objectivesLastClaimed[index] = new Date(claimed_at).getTime();\n                        skipFlipped = true;\n                    }\n    \n    \n                    if (objectivesLastFlipped[index].getTime() !== new Date(last_flipped).getTime() && !skipFlipped) {\n                        let now = new Date();\n                        let flippedBeforeSec = (now.getTime() - new Date(last_flipped).getTime()) / 1000;\n                        objectivesLastFlipped[index] = new Date(last_flipped);\n                        if (flippedBeforeSec < 0)\n                            flippedBeforeSec = 0;\n                        console.log('flipped');\n                        matchupLog.push({\n                            map : map.type,\n                            type : 'flipped',\n                            owner : owner,\n                            flipped : last_flipped,\n                            flippedBeforeSec : flippedBeforeSec,\n                            objectiveId : objective.id\n                        });\n                    }\n    \n                    if (claimed_at && !skipFlipped) {\n                        if (objectivesLastClaimed[index] !== new Date(claimed_at).getTime()) {\n                            let now = new Date();\n                            objectivesLastClaimed[index] = new Date(claimed_at).getTime();\n                            let claimedBeforeSec = (now.getTime() - objectivesLastClaimed[index]) / 1000;\n                            if (claimedBeforeSec < 0)\n                                claimedBeforeSec = 0;\n                            console.log('claimed', claimed_by);\n                            let guild = await Gw2Guild.getById(claimed_by);\n                            guilds[guild.id] = guild;\n                            matchupLog.push({\n                                map : map.type,\n                                type : 'claimed',\n                                owner : owner,\n                                claimed : claimed_at,\n                                claimed_by : claimed_by,\n                                claimedBeforeSec : claimedBeforeSec,\n                                objectiveId : objective.id\n                            });\n                        }\n                    }\n                }\n            }\n        }\n\n        let timeout = setTimeout(() => {\n            this.getMatchup();\n        }, 5000);\n\n        if(newMatchup)\n            this.setState({\n                matchup : newMatchup,\n                timeout : timeout,\n                skirmishStart : skirmishStart,\n                objectivesLastClaimed : objectivesLastClaimed,\n                objectivesLastFlipped : objectivesLastFlipped,\n                matchupLog : matchupLog,\n                guilds : guilds,\n            });\n        \n    }\n\n    async setWorld(id) {\n        id = parseInt(id, 10); \n        let result = await this.request.get(`https://api.guildwars2.com/v2/wvw/matches?ids=all&_=${new Date().getTime()}`);\n        if(result.length === undefined || result instanceof Error) {\n            alert('There is a problem with the Guild Wars 2 API or your network connection.')\n            return;\n        }\n        let selectedMatch;\n        let color;\n        let linkedWorlds;\n        for(let match of result) {\n            let { all_worlds } = match;\n            let worlds = all_worlds.red.concat(all_worlds.blue, all_worlds.green);\n            if(worlds.includes(id)) {\n                selectedMatch = match;\n                if(all_worlds.red.includes(id))\n                    color = 'red';\n                else if(all_worlds.blue.includes(id))\n                    color = 'blue';\n                else if(all_worlds.green.includes(id))\n                    color = 'green';\n\n                linkedWorlds = all_worlds;\n            }\n        }\n\n        let matchId = selectedMatch.id;\n        let [region, tier] = matchId.split('-');\n\n        this.setState({ world : id, matchup : selectedMatch, region : region, tier : tier, skirmish : selectedMatch, color : color, linkedWorlds : linkedWorlds });\n        this.getMatchup();\n    }\n\n    resetWorld() {\n        this.setState({ world : 0 });\n    }\n\n    render() {\n\n        if(!this.state.ready)\n            return (<div></div>)\n\n        return (\n            <div className=\"App\">\n                <div style={{\n                    position : 'relative'\n                }}>\n                    <WorldSelector color={this.state.color} linkedWorlds={this.state.linkedWorlds} world={this.state.world} worlds={this.state.worlds} setWorld={(id) => this.setWorld(id)}/>\n                    <MatchupLog objectives={this.state.objectives} world={this.state.world} log={this.state.matchupLog} guilds={this.state.guilds}/>\n                    <MatchupStats color={this.state.color} worlds={this.state.worlds} linkedWorlds={this.state.linkedWorlds} world={this.state.world} matchup={this.state.matchup}/>\n\n                    <img src={'/img/hybrid-1-desert-4096.jpg'} alt=\"\" style={{ width : '100%'}}/>\n\n                    <div className=\"red-map\">\n                        <h2 className=\"redBorderHeading\">Red BL</h2>\n                        <Camp top={'13.5%'} left={'51%'} matchup={this.state.matchup} id={'1099-99'} objectives={this.state.objectives} map={'RedHome'} guilds={this.state.guilds}/>\n                        <Camp top={'18.2%'} left={'39%'} matchup={this.state.matchup} id={'1099-115'} objectives={this.state.objectives} map={'RedHome'} guilds={this.state.guilds}/>\n                        <Camp top={'19.8%'} left={'63.8%'} matchup={this.state.matchup} id={'1099-109'} objectives={this.state.objectives} map={'RedHome'} guilds={this.state.guilds}/>\n                        <Camp top={'35.5%'} left={'41%'} matchup={this.state.matchup} id={'1099-101'} objectives={this.state.objectives} map={'RedHome'} guilds={this.state.guilds}/>\n                        <Camp top={'36.7%'} left={'62.3%'} matchup={this.state.matchup} id={'1099-100'} objectives={this.state.objectives} map={'RedHome'} guilds={this.state.guilds}/>\n                        <Camp top={'42.7%'} left={'50.5%'} matchup={this.state.matchup} id={'1099-116'} objectives={this.state.objectives} map={'RedHome'} guilds={this.state.guilds}/>\n\n                        <Tower top={'13.5%'} left={'43%'} matchup={this.state.matchup} id={'1099-102'} objectives={this.state.objectives} map={'RedHome'} guilds={this.state.guilds}/>\n                        <Tower top={'15%'} left={'60.7%'} matchup={this.state.matchup} id={'1099-104'} objectives={this.state.objectives} map={'RedHome'} guilds={this.state.guilds}/>\n                        <Tower top={'38.9%'} left={'56.1%'} matchup={this.state.matchup} id={'1099-105'} objectives={this.state.objectives} map={'RedHome'} guilds={this.state.guilds}/>\n                        <Tower top={'36.5%'} left={'46.5%'} matchup={this.state.matchup} id={'1099-110'} objectives={this.state.objectives} map={'RedHome'} guilds={this.state.guilds}/>\n\n                        <Keep top={'21%'} left={'51.5%'} matchup={this.state.matchup} id={'1099-113'} objectives={this.state.objectives} map={'RedHome'} guilds={this.state.guilds}/>\n                        <Keep top={'27.5%'} left={'38.5%'} matchup={this.state.matchup} id={'1099-106'} objectives={this.state.objectives} map={'RedHome'} guilds={this.state.guilds}/>\n                        <Keep top={'28.5%'} left={'64%'} matchup={this.state.matchup} id={'1099-114'} objectives={this.state.objectives} map={'RedHome'} guilds={this.state.guilds}/>\n                    </div>\n                    \n                    <div className=\"blue-map\">\n                        <h2 className=\"blueBorderHeading\">Blue BL</h2>\n                        <Camp top={'34.5%'} left={'82%'} matchup={this.state.matchup} id={'96-39'} objectives={this.state.objectives} map={'BlueHome'} guilds={this.state.guilds}/>\n                        <Camp top={'47.5%'} left={'74%'} matchup={this.state.matchup} id={'96-52'} objectives={this.state.objectives} map={'BlueHome'} guilds={this.state.guilds}/>\n                        <Camp top={'47%'} left={'91.5%'} matchup={this.state.matchup} id={'96-51'} objectives={this.state.objectives} map={'BlueHome'} guilds={this.state.guilds}/>\n                        <Camp top={'64.5%'} left={'74.5%'} matchup={this.state.matchup} id={'96-53'} objectives={this.state.objectives} map={'BlueHome'} guilds={this.state.guilds}/>\n                        <Camp top={'63.5%'} left={'90.5%'} matchup={this.state.matchup} id={'96-50'} objectives={this.state.objectives} map={'BlueHome'} guilds={this.state.guilds}/>\n                        <Camp top={'71.5%'} left={'82.0%'} matchup={this.state.matchup} id={'96-34'} objectives={this.state.objectives} map={'BlueHome'} guilds={this.state.guilds}/>\n\n                        <Tower top={'45.5%'} left={'76.5%'} matchup={this.state.matchup} id={'96-38'} objectives={this.state.objectives} map={'BlueHome'} guilds={this.state.guilds}/>\n                        <Tower top={'45.5%'} left={'87.5%'} matchup={this.state.matchup} id={'96-40'} objectives={this.state.objectives} map={'BlueHome'} guilds={this.state.guilds}/>\n                        <Tower top={'63%'} left={'78.5%'} matchup={this.state.matchup} id={'96-35'} objectives={this.state.objectives} map={'BlueHome'} guilds={this.state.guilds}/>\n                        <Tower top={'63%'} left={'86.5%'} matchup={this.state.matchup} id={'96-36'} objectives={this.state.objectives} map={'BlueHome'} guilds={this.state.guilds}/>\n\n                        <Keep top={'50%'} left={'82%'} matchup={this.state.matchup} id={'96-37'} objectives={this.state.objectives} map={'BlueHome'} guilds={this.state.guilds}/>\n                        <Keep top={'57%'} left={'72.5%'} matchup={this.state.matchup} id={'96-33'} objectives={this.state.objectives} map={'BlueHome'} guilds={this.state.guilds}/>\n                        <Keep top={'56%'} left={'92.5%'} matchup={this.state.matchup} id={'96-32'} objectives={this.state.objectives} map={'BlueHome'} guilds={this.state.guilds}/>\n                    </div>\n\n                    <div className=\"green-map\">\n                        <h2 className=\"greenBorderHeading\">Green BL</h2>\n                        <Camp top={'43.5%'} left={'16.5%'} matchup={this.state.matchup} id={'95-39'} objectives={this.state.objectives} map={'GreenHome'} guilds={this.state.guilds}/>\n                        <Camp top={'55.5%'} left={'7.5%'} matchup={this.state.matchup} id={'95-52'} objectives={this.state.objectives} map={'GreenHome'} guilds={this.state.guilds}/>\n                        <Camp top={'55.5%'} left={'25.5%'} matchup={this.state.matchup} id={'95-51'} objectives={this.state.objectives} map={'GreenHome'} guilds={this.state.guilds}/>\n                        <Camp top={'72.5%'} left={'8.5%'} matchup={this.state.matchup} id={'95-53'} objectives={this.state.objectives} map={'GreenHome'} guilds={this.state.guilds}/>\n                        <Camp top={'72%'} left={'24.5%'} matchup={this.state.matchup} id={'95-50'} objectives={this.state.objectives} map={'GreenHome'} guilds={this.state.guilds}/>\n                        <Camp top={'80.5%'} left={'16%'} matchup={this.state.matchup} id={'95-34'} objectives={this.state.objectives} map={'GreenHome'} guilds={this.state.guilds}/>\n\n                        <Tower top={'53.5%'} left={'10.5%'} matchup={this.state.matchup} id={'95-38'} objectives={this.state.objectives} map={'GreenHome'} guilds={this.state.guilds}/>\n                        <Tower top={'53.5%'} left={'21.5%'} matchup={this.state.matchup} id={'95-40'} objectives={this.state.objectives} map={'GreenHome'} guilds={this.state.guilds}/>\n                        <Tower top={'71%'} left={'12.5%'} matchup={this.state.matchup} id={'95-35'} objectives={this.state.objectives} map={'GreenHome'} guilds={this.state.guilds}/>\n                        <Tower top={'71%'} left={'20.5%'} matchup={this.state.matchup} id={'95-36'} objectives={this.state.objectives} map={'GreenHome'} guilds={this.state.guilds}/>\n\n                        <Keep top={'58.5%'} left={'16%'} matchup={this.state.matchup} id={'95-37'} objectives={this.state.objectives} map={'GreenHome'} guilds={this.state.guilds}/>\n                        <Keep top={'65.5%'} left={'6.5%'} matchup={this.state.matchup} id={'95-33'} objectives={this.state.objectives} map={'GreenHome'} guilds={this.state.guilds}/>\n                        <Keep top={'64%'} left={'26.5%'} matchup={this.state.matchup} id={'95-32'} objectives={this.state.objectives} map={'GreenHome'} guilds={this.state.guilds}/>\n                    </div>\n                    \n                    <div className=\"center-map\">\n                        <h2 className=\"ebgHeading\">EBG</h2>\n                        <Camp top={'64.5%'} left={'42.5%'} matchup={this.state.matchup} id={'38-6'} objectives={this.state.objectives} map={'Center'} guilds={this.state.guilds}/>\n                        <Camp top={'67.5%'} left={'56.5%'} matchup={this.state.matchup} id={'38-5'} objectives={this.state.objectives} map={'Center'} guilds={this.state.guilds}/>\n                        <Camp top={'75.5%'} left={'40.5%'} matchup={this.state.matchup} id={'38-10'} objectives={this.state.objectives} map={'Center'} guilds={this.state.guilds}/>\n                        <Camp top={'88.5%'} left={'46.5%'} matchup={this.state.matchup} id={'38-4'} objectives={this.state.objectives} map={'Center'} guilds={this.state.guilds}/>\n                        <Camp top={'90.5%'} left={'53.5%'} matchup={this.state.matchup} id={'38-7'} objectives={this.state.objectives} map={'Center'} guilds={this.state.guilds}/>\n                        <Camp top={'76.5%'} left={'59.5%'} matchup={this.state.matchup} id={'38-8'} objectives={this.state.objectives} map={'Center'} guilds={this.state.guilds}/>\n\n                        <Tower top={'63.5%'} left={'47%'} matchup={this.state.matchup} id={'38-17'} objectives={this.state.objectives} map={'Center'} guilds={this.state.guilds}/>\n                        <Tower top={'64.5%'} left={'54.5%'} matchup={this.state.matchup} id={'38-20'} objectives={this.state.objectives} map={'Center'} guilds={this.state.guilds}/>\n                        <Tower top={'69%'} left={'54%'} matchup={this.state.matchup} id={'38-19'} objectives={this.state.objectives} map={'Center'} guilds={this.state.guilds}/>\n                        <Tower top={'70.5%'} left={'46.5%'} matchup={this.state.matchup} id={'38-18'} objectives={this.state.objectives} map={'Center'} guilds={this.state.guilds}/>\n\n                        <Tower top={'80.5%'} left={'38.5%'} matchup={this.state.matchup} id={'38-11'} objectives={this.state.objectives} map={'Center'} guilds={this.state.guilds}/>\n                        <Tower top={'88.5%'} left={'43.5%'} matchup={this.state.matchup} id={'38-13'} objectives={this.state.objectives} map={'Center'} guilds={this.state.guilds}/>\n                        <Tower top={'84%'} left={'47.5%'} matchup={this.state.matchup} id={'38-13'} objectives={this.state.objectives} map={'Center'} guilds={this.state.guilds}/>\n                        <Tower top={'77.5%'} left={'44.5%'} matchup={this.state.matchup} id={'38-12'} objectives={this.state.objectives} map={'Center'} guilds={this.state.guilds}/>\n\n                        <Tower top={'86%'} left={'52.5%'} matchup={this.state.matchup} id={'38-16'} objectives={this.state.objectives} map={'Center'} guilds={this.state.guilds}/>\n                        <Tower top={'89.5%'} left={'57.5%'} matchup={this.state.matchup} id={'38-15'} objectives={this.state.objectives} map={'Center'} guilds={this.state.guilds}/>\n                        <Tower top={'80.5%'} left={'60.5%'} matchup={this.state.matchup} id={'38-22'} objectives={this.state.objectives} map={'Center'} guilds={this.state.guilds}/>\n                        <Tower top={'77.5%'} left={'56%'} matchup={this.state.matchup} id={'38-21'} objectives={this.state.objectives} map={'Center'} guilds={this.state.guilds}/>\n\n                        <Keep top={'66.5%'} left={'51.5%'} matchup={this.state.matchup} id={'38-1'} objectives={this.state.objectives} map={'Center'} guilds={this.state.guilds}/>\n                        <Keep top={'84.5%'} left={'41%'} matchup={this.state.matchup} id={'38-3'} objectives={this.state.objectives} map={'Center'} guilds={this.state.guilds}/>\n                        <Keep top={'84.5%'} left={'58.5%'} matchup={this.state.matchup} id={'38-2'} objectives={this.state.objectives} map={'Center'} guilds={this.state.guilds}/>\n\n                        <Castle top={'77.5%'} left={'50%'} matchup={this.state.matchup} id={'38-9'} objectives={this.state.objectives} map={'Center'} guilds={this.state.guilds}/>\n                    </div>\n                </div>\n                \n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}