{"version":3,"sources":["components/WorldSelector/index.js","lib/RequestHandler.js","gw2apiModels/Gw2Guild.js","components/MatchupLog/index.js","components/MatchupStats/index.js","gw2apiModels/Gw2Worlds.js","components/Objectives/Camp.js","components/Objectives/Tower.js","components/Objectives/Keep.js","components/Objectives/Castle.js","App.js","serviceWorker.js","index.js"],"names":["style","selectorContainer","position","top","left","padding","background","textAlign","color","fontSize","worldContainer","minWidth","zIndex","WorldSelector","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","_this$props","props","worlds","world","setWorld","linkedWorlds","worldMenuItems","worldId","push","react_default","a","createElement","MenuItem_default","key","value","name","worldNamesGreen","green","map","index","worldNamesBlue","blue","worldNamesRed","red","homeServer","src","alt","verticalAlign","width","marginRight","spanStyle","lineHeight","textShadow","className","join","FormControl_default","variant","InputLabel_default","ref","htmlFor","Select_default","onChange","e","target","input","OutlinedInput_default","labelWidth","id","Component","RequestHandler","config","assign","retry","url","tryCnt","axios","get","timeout","result","data","Error","_context","t0","gw2apiModels_Gw2Guild","Gw2Guild","request","lang","concat","logContainer","bottom","right","maxHeight","overflowY","MatchupLog","maps","BlueHome","GreenHome","RedHome","Center","dateObj","Date","getHours","slice","getMinutes","getSeconds","_this2","log","objectives","guilds","entryStyle","logRev","reverse","filter","entry","rowStyle","ownerStyle","fontWeight","owner","type","parseDate","flipped","objectiveId","claimed","claimed_by","tag","MatchupStats","expanded","elem","document","getElementById","select","execCommand","console","matchup","kills","deaths","Math","round","scores","classNames","statsContainer","statsContainerExpanded","Button_default","onClick","setState","KeyboardArrowRight_default","KeyboardArrowLeft_default","require","gw2apiModels_Gw2Worlds","Camp","pulse","nextProps","nextState","undefined","newOwner","thisObjective","i","length","mapOld","idOld","matchupOld","setTimeout","_classNames3","claimedBy","pointsTick","_thisObjective2","points_tick","defineProperty","Tower","_thisObjective","pulse1","pulse2","Keep","diff","getTime","hours","minutes","floor","str","tooltip","objective","last_flipped","yaks_delivered","guildImage","replace","parseFlippedTime","Tooltip_default","title","placement","Castle","App","ready","region","tier","skirmish","skirmishStart","objectivesLastFlipped","objectivesLastClaimed","matchupLog","Gw2Worlds","getAll","newMatchup","getMatchup","start_time","skirmishes","startTime","mapId","claimed_at","getById","guild","skipFlipped","now","flippedBeforeSec","claimedBeforeSec","parseInt","alert","_iterator","Symbol","iterator","_iteratorNormalCompletion","_step","next","done","match","all_worlds","includes","selectedMatch","matchId","split","_this3","WorldSelector_WorldSelector","MatchupLog_MatchupLog","MatchupStats_MatchupStats","Camp_Camp","Tower_Tower","Keep_Keep","Castle_Castle","Boolean","window","location","hostname","ReactDOM","render","src_App_0","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.81b58669.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst style = {\r\n    selectorContainer : {\r\n        position : 'fixed',\r\n        top : '0px',\r\n        left : '0px',\r\n        padding : '10px',\r\n        background : 'rgba(255,255,255,0.3)',\r\n        textAlign : 'left',\r\n        color : '#efefef',\r\n        fontSize : '12pt',\r\n    },\r\n    worldContainer :  {\r\n        position : 'fixed',\r\n        top : '0px',\r\n        left : '0px',\r\n        padding : '10px',\r\n        background : 'rgba(0,0,0,0.3)',\r\n        textAlign : 'left',\r\n        color : '#efefef',\r\n        fontSize : '12pt',\r\n        minWidth : '300px',\r\n        zIndex : 100\r\n    },\r\n}\r\n\r\nexport default class WorldSelector extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n        }\r\n    }\r\n    render() {\r\n        let { worlds, world, setWorld, linkedWorlds, color } = this.props;\r\n\r\n        let worldMenuItems = [];\r\n        for(let worldId in worlds) {\r\n            let world = worlds[worldId];\r\n            worldMenuItems.push((<MenuItem key={worldId} value={worldId}>{world.name}</MenuItem>))\r\n        }\r\n\r\n        if(world) {\r\n\r\n            let worldNamesGreen = linkedWorlds.green.map((value, index) => {\r\n                return worlds[value].name;\r\n            });\r\n            let worldNamesBlue = linkedWorlds.blue.map((value, index) => {\r\n                return worlds[value].name;\r\n            });\r\n            let worldNamesRed = linkedWorlds.red.map((value, index) => {\r\n                return worlds[value].name;\r\n            });\r\n            \r\n            let homeServer = (<img src=\"/img/World_Completion.png\" alt=\"homeServer\" style={{ verticalAlign : 'middle', width : '20px', marginRight : '5px'}}/>);\r\n            let spanStyle = {\r\n                fontSize : '20px',\r\n                lineHeight : '30px',\r\n                verticalAlign : 'middle',\r\n                textShadow : 'rgb(0, 0, 0) -1px 0px 1px, rgb(0, 0, 0) 1px 0px 1px, rgb(0, 0, 0) 0px 1px 1px, rgb(0, 0, 0) 0px -1px 1px',\r\n            };\r\n            return (\r\n                <div style={style.worldContainer}>\r\n                    <div className=\"green\">\r\n                        {color === 'green' ? homeServer : \"\"}<span style={spanStyle}>{worldNamesGreen.join(' & ')}</span>\r\n                    </div>\r\n                    <div className=\"blue\">\r\n                        {color === 'blue' ? homeServer : \"\"}<span style={spanStyle}>{worldNamesBlue.join(' & ')}</span>\r\n                    </div>\r\n                    <div className=\"red\">\r\n                        {color === 'red' ? homeServer : \"\"}<span style={spanStyle}>{worldNamesRed.join(' & ')}</span>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {           \r\n            return (\r\n                <div style={style.selectorContainer}>\r\n                    <FormControl variant=\"outlined\" style={{ width : '250px' }}>\r\n                        <InputLabel ref={\"inputLabelRef\"} htmlFor=\"outlined-age-simple\">Choose a world</InputLabel>\r\n                        <Select value={\"dwadawdawd\"} onChange={(e) => {setWorld(e.target.value)}} input={<OutlinedInput labelWidth={250} name=\"world\" id=\"outlined-age-simple\" />}>\r\n                            {worldMenuItems}\r\n                        </Select>\r\n                    </FormControl>     \r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}","import axios from 'axios';\r\n\r\nexport default class RequestHandler {\r\n    constructor(config) {\r\n        this.config = Object.assign({\r\n            retry : 3\r\n        }, config);\r\n    }\r\n\r\n    async get(url, tryCnt = 0) {\r\n        try {\r\n            let result = await axios.get(url, {\r\n                timeout : 5000\r\n            });\r\n            return result.data;\r\n        } catch(error) {\r\n            if(tryCnt < this.config.retry - 1) \r\n                return await this.get(url, ++tryCnt)\r\n            else\r\n                return new Error(error);\r\n        }\r\n    }\r\n\r\n    post() {}\r\n\r\n    put() {}\r\n\r\n    delete() {}\r\n}","import RequestHandler from './../lib/RequestHandler';\r\n\r\nclass Gw2Guild {\r\n    constructor() {\r\n        this.request = new RequestHandler();\r\n    }\r\n\r\n    async getById(id, lang = 'en') {\r\n        let result = await this.request.get(`https://api.guildwars2.com/v2/guild/${id}?lang=${lang}`);\r\n        return result;\r\n    }\r\n\r\n}\r\n\r\nexport default new Gw2Guild();","import React, { Component } from 'react';\r\nimport Gw2Guild from './../../gw2apiModels/Gw2Guild';\r\n\r\nconst style = {\r\n    logContainer : {\r\n        position : 'fixed',\r\n        bottom : '0px',\r\n        right : '0px',\r\n        maxHeight : '150px',\r\n        width : '500px',\r\n        overflowY : 'auto',\r\n        textAlign : 'left',\r\n        color : '#efefef',\r\n        fontSize : '12pt',\r\n        zIndex : 100\r\n    }\r\n}\r\n\r\nexport default class MatchupLog extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            maps : {\r\n                'BlueHome' : 'BBL',\r\n                'GreenHome' : 'GBL',\r\n                'RedHome' : 'RBL',\r\n                'Center' : 'EBG',\r\n            }\r\n        }\r\n    }\r\n\r\n    parseDate(dateObj) {\r\n        if(typeof dateObj === 'string')\r\n            dateObj = new Date(dateObj);\r\n        \r\n        return ('00' + dateObj.getHours()).slice(-2) + ':' + ('00' + dateObj.getMinutes()).slice(-2)  + ':' + ('00' + dateObj.getSeconds()).slice(-2);\r\n    }\r\n\r\n    render() {\r\n        let { world, log, objectives, guilds } = this.props;\r\n        let { maps } = this.state;\r\n\r\n        let entryStyle = {\r\n            fontSize : '13px',\r\n            background : 'rgba(0,0,0,0.5)',\r\n            padding : '5px',\r\n            color : 'white',\r\n            textShadow: '-1px 0 1px #000, 1px 0 1px #000, 0 1px 1px #000, 0 -1px 1px #000'\r\n        };\r\n\r\n        if(world) {\r\n            let logDup = [].concat(log);\r\n            let logRev = logDup.reverse().filter((entry, index) => {\r\n                if(index < 50)\r\n                    return entry;\r\n            });\r\n            \r\n            return (\r\n                <div style={style.logContainer}>\r\n                    {logRev.map((entry, index) => {\r\n\r\n                        let rowStyle = Object.assign({}, entryStyle);\r\n                        let ownerStyle = {\r\n                            fontWeight : 700,\r\n                        };\r\n\r\n                        switch(entry.map) {\r\n                            case \"RedHome\" : rowStyle.background = \"#ff000020\"; break;\r\n                            case \"BlueHome\" : rowStyle.background = \"#0000ff20\"; break;\r\n                            case \"GreenHome\" : rowStyle.background = \"#00ff0020\"; break;\r\n                            case \"Center\" : rowStyle.background = \"#ffffff20\"; break;\r\n                            default: break;\r\n                        }\r\n\r\n                        switch(entry.owner) {\r\n                            case \"Red\" : ownerStyle.color = \"red\"; break;\r\n                            case \"Blue\" : ownerStyle.color = \"blue\"; break;\r\n                            case \"Green\" : ownerStyle.color = \"green\"; break;\r\n                            default: break;\r\n                        }\r\n\r\n                        if(entry.type === 'flipped')\r\n                            return (<div style={rowStyle}>{maps[entry.map]}: {this.parseDate(entry.flipped)} - <span style={ownerStyle}>{entry.owner}</span> flipped <strong>{objectives[entry.objectiveId].name}</strong></div>)\r\n                        else\r\n                            return (<div style={rowStyle}>{maps[entry.map]}: {this.parseDate(entry.claimed)} - <span style={ownerStyle}>{guilds[entry.claimed_by].name} [{guilds[entry.claimed_by].tag}]</span> claimed <strong>{objectives[entry.objectiveId].name}</strong></div>)\r\n                    })}\r\n                    <div style={entryStyle}>Service started.</div>\r\n                </div>\r\n            )\r\n        } else {           \r\n            return (\r\n                <div style={style.logContainer}>\r\n                   \r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CopyIcon from '@material-ui/icons/FileCopy';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport ArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport ArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport classNames from 'classnames';\r\n\r\nimport './main.css';\r\n\r\nconst style = {\r\n    iconButton : {\r\n        padding : '1px'\r\n    },\r\n    iconStyle : {\r\n        fontSize : '16px',\r\n    }\r\n}\r\n\r\nexport default class MatchupStats extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            expanded : true\r\n        }\r\n    }\r\n\r\n    parseDate(dateObj) {\r\n        if(typeof dateObj === 'string')\r\n            dateObj = new Date(dateObj);\r\n        \r\n        return ('00' + dateObj.getHours()).slice(-2) + ':' + ('00' + dateObj.getMinutes()).slice(-2)  + ':' + ('00' + dateObj.getSeconds()).slice(-2);\r\n    }\r\n\r\n    copyToClipboard(id) {\r\n        let elem = document.getElementById(id);\r\n        if(!elem) {\r\n            console.log(id, elem);\r\n            return;\r\n        }\r\n        elem.select();\r\n        document.execCommand(\"copy\");\r\n    }\r\n\r\n    render() {\r\n        let { world, matchup, linkedWorlds, color, worlds } = this.props;\r\n\r\n        \r\n        if(world) {\r\n\r\n            console.log(matchup);\r\n\r\n        let kills = {\r\n            'red' : matchup.kills.red,\r\n            'blue' : matchup.kills.blue,\r\n            'green' : matchup.kills.green,\r\n        };\r\n\r\n        let deaths = {\r\n            'red' : matchup.deaths.red,\r\n            'blue' : matchup.deaths.blue,\r\n            'green' : matchup.deaths.green\r\n        }\r\n\r\n        let worldNamesGreen = linkedWorlds.green.map((value, index) => {\r\n            return worlds[value].name;\r\n        });\r\n        let worldNamesBlue = linkedWorlds.blue.map((value, index) => {\r\n            return worlds[value].name;\r\n        });\r\n        let worldNamesRed = linkedWorlds.red.map((value, index) => {\r\n            return worlds[value].name;\r\n        });\r\n\r\n        let homeServer = (<img src=\"/img/World_Completion.png\" alt=\"homeServer\" style={{ verticalAlign : 'middle', width : '20px', marginRight : '5px'}}/>);\r\n        let greenAllCopy = `${worldNamesGreen.join(' & ')} - Kills: ${kills.green} - Deaths: ${deaths.green} - KDR: ${Math.round(kills.green / deaths.green * 100) / 100} - PPK: ${Math.round(kills.green * 2 / matchup.scores.green * 10000) / 100 }%`;\r\n        let blueAllCopy = `${worldNamesBlue.join(' & ')} - Kills: ${kills.blue} - Deaths: ${deaths.blue} - KDR: ${Math.round(kills.blue / deaths.blue * 100) / 100} - PPK: ${Math.round(kills.blue * 2 / matchup.scores.blue * 10000) / 100 }%`;\r\n        let redAllCopy = `${worldNamesRed.join(' & ')} - Kills: ${kills.red} - Deaths: ${deaths.red} - KDR: ${Math.round(kills.red / deaths.red * 100) / 100} - PPK: ${Math.round(kills.red * 2 / matchup.scores.red * 10000) / 100 }%`;\r\n\r\n            return (\r\n                <div className={classNames({\r\n                    \"statsContainer\" : true,\r\n                    \"statsContainerExpanded\" : this.state.expanded\r\n                })}>\r\n                    <div className=\"floatLeft statsExpander\">\r\n                        <Button onClick={() => {\r\n                            this.setState({\r\n                                expanded : !this.state.expanded\r\n                            })\r\n                        }}>\r\n                            {this.state.expanded ? <ArrowRight/> : <ArrowLeft/>}\r\n                        </Button>\r\n                    </div>\r\n                    <table className=\"floatLeft statsTable\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Server</th>\r\n                                    <th>Kills</th>\r\n                                    <th>Deaths</th>\r\n                                    <th>K/D</th>\r\n                                    <th>PPK</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        <div className=\"green\">\r\n                                            {color === 'green' ? homeServer : \"\"}<span>{worldNamesGreen.join(' & ')}</span>\r\n                                        </div>  \r\n                                    </td>\r\n                                    <td>\r\n                                        {kills.green}\r\n                                    </td>\r\n                                    <td>\r\n                                        {deaths.green}\r\n                                    </td>\r\n                                    <td>\r\n                                        {Math.round(kills.green / deaths.green * 100) / 100 }\r\n                                    </td>\r\n                                    <td>\r\n                                        {Math.round(kills.green * 2 / matchup.scores.green * 10000) / 100 }%\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>\r\n                                        <div className=\"blue\">\r\n                                            {color === 'blue' ? homeServer : \"\"}<span>{worldNamesBlue.join(' & ')}</span>\r\n                                        </div>  \r\n                                    </td>\r\n                                    <td>\r\n                                        {kills.blue}\r\n                                    </td>\r\n                                    <td>\r\n                                        {deaths.blue}\r\n                                    </td>\r\n                                    <td>\r\n                                        {Math.round(kills.blue / deaths.blue * 100) / 100 }\r\n                                    </td>\r\n                                    <td>\r\n                                        {Math.round(kills.blue * 2 / matchup.scores.blue * 10000) / 100 }%\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>\r\n                                        <div className=\"red\">\r\n                                            {color === 'red' ? homeServer : \"\"}<span>{worldNamesRed.join(' & ')}</span>\r\n                                        </div>  \r\n                                    </td>\r\n                                    <td>\r\n                                        {kills.red}\r\n                                    </td>\r\n                                    <td>\r\n                                        {deaths.red}\r\n                                    </td>\r\n                                    <td>\r\n                                        {Math.round(kills.red / deaths.red * 100) / 100 }\r\n                                    </td>\r\n                                    <td>\r\n                                        {Math.round(kills.red * 2 / matchup.scores.red * 10000) / 100 }%\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                </div>\r\n            )\r\n        } else {           \r\n            return (\r\n                <div></div>\r\n            );\r\n        }\r\n    }\r\n}","const axios = require('axios');\r\n\r\nclass Gw2Worlds {\r\n    async getById(id, lang = 'en') {\r\n        let result = await axios.get(`https://api.guildwars2.com/v2/worlds?lang=${lang}&id=${id}`);\r\n        return result.data;\r\n    }\r\n\r\n    async getAll(lang = 'en') {\r\n        let result = await axios.get(`https://api.guildwars2.com/v2/worlds?lang=${lang}&ids=all`);\r\n        return result.data;\r\n    }\r\n}\r\n\r\nexport default new Gw2Worlds();","import React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\n\r\nexport default class Camp extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            pulse : false\r\n        }\r\n    }\r\n\r\n    parseDate(dateObj) {\r\n        if(typeof dateObj === 'string')\r\n            dateObj = new Date(dateObj);\r\n        \r\n        return ('00' + dateObj.getHours()).slice(-2) + ':' + ('00' + dateObj.getMinutes()).slice(-2)  + ':' + ('00' + dateObj.getSeconds()).slice(-2);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps, nextState) {\r\n        \r\n        if(this.props.matchup.id === undefined)\r\n            return;\r\n\r\n        let { map, id, matchup } = nextProps;\r\n        let owner;\r\n        let newOwner;\r\n        if(matchup.maps) {\r\n            let thisObjective;\r\n            for(let i = 0; i < matchup.maps.length; i++)\r\n                if(matchup.maps[i].type === map) {\r\n                    for(let a = 0; a < matchup.maps[i].objectives.length; a++)\r\n                        if(matchup.maps[i].objectives[a].id === id)\r\n                            thisObjective = matchup.maps[i].objectives[a];\r\n                }\r\n\r\n            owner = thisObjective.owner;\r\n        }\r\n\r\n        let mapOld = this.props.map;\r\n        let idOld = this.props.id;\r\n        let matchupOld = this.props.matchup;\r\n\r\n        if(matchupOld.maps) {\r\n            let thisObjective;\r\n            for(let i = 0; i < matchupOld.maps.length; i++)\r\n                if(matchupOld.maps[i].type === mapOld) {\r\n                    for(let a = 0; a < matchupOld.maps[i].objectives.length; a++)\r\n                        if(matchupOld.maps[i].objectives[a].id === idOld)\r\n                            thisObjective = matchupOld.maps[i].objectives[a];\r\n                }\r\n\r\n            newOwner = thisObjective.owner;\r\n        }\r\n\r\n        if(owner !== newOwner) {\r\n            console.log('new owner', newOwner);\r\n            this.setState({ pulse : true });\r\n            setTimeout(() => {\r\n                this.setState({ pulse : false });\r\n            }, 10000);\r\n        }\r\n    }\r\n\r\n    render() {    \r\n        \r\n        let { map, objectives, id, matchup, top, left } = this.props;\r\n        let color = 'greyBg';\r\n        let pointsTick = 0;\r\n        let claimedBy;\r\n        let newOwner;\r\n        if(matchup.maps) {\r\n            let objective = objectives[id];\r\n            let thisObjective;\r\n            for(let i = 0; i < matchup.maps.length; i++)\r\n                if(matchup.maps[i].type === map) {\r\n                    for(let a = 0; a < matchup.maps[i].objectives.length; a++)\r\n                        if(matchup.maps[i].objectives[a].id === id)\r\n                            thisObjective = matchup.maps[i].objectives[a];\r\n                }\r\n\r\n            let { owner, points_tick, claimed_by } = thisObjective;\r\n            pointsTick = points_tick;\r\n            newOwner = owner;\r\n            claimedBy = claimed_by;\r\n            switch(owner) {\r\n                case 'Red' : color = 'redBg'; break;\r\n                case 'Blue' : color = 'blueBg'; break;\r\n                case 'Green' : color = 'greenBg'; break;\r\n                default : color = 'greyBg';\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"objectiveContainer\" style={{\r\n                top : top,\r\n                left : left,\r\n            }}>\r\n                <div className={classNames({\r\n                    [`pulse1${newOwner}`] : this.state.pulse\r\n                })}/>\r\n                <div className={classNames({\r\n                    [`pulse2${newOwner}`] : this.state.pulse\r\n                })}/>\r\n                   <img className={classNames({\r\n                       [color] : true,\r\n                       'objective' : true\r\n                   })} src=\"/img/camp.png\" alt=\"Camp\"/>\r\n                   {pointsTick === 4 ? <img src=\"/img/Reinforced.png\" alt=\"Reinforced\" className=\"reinforced\"/> : \"\"}\r\n                   {pointsTick === 3 ? <img src=\"/img/Secured.png\" alt=\"Secured\" className=\"secured\"/> : \"\"}\r\n                   {claimedBy ? <img src=\"/img/claimed.png\" alt=\"claimed\" className=\"claimed\"/> : \"\"}\r\n                </div>\r\n            )\r\n\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\n\r\nexport default class Tower extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            pulse : false\r\n        }\r\n    }\r\n\r\n    parseDate(dateObj) {\r\n        if(typeof dateObj === 'string')\r\n            dateObj = new Date(dateObj);\r\n        \r\n        return ('00' + dateObj.getHours()).slice(-2) + ':' + ('00' + dateObj.getMinutes()).slice(-2)  + ':' + ('00' + dateObj.getSeconds()).slice(-2);\r\n    }\r\n\r\n    static componentWillReceiveProps(nextProps, nextState) {\r\n        \r\n        if(this.props.matchup.id === undefined)\r\n            return;\r\n\r\n        let { map, id, matchup } = nextProps;\r\n        let owner;\r\n        let newOwner;\r\n        if(matchup.maps) {\r\n            let thisObjective;\r\n            for(let i = 0; i < matchup.maps.length; i++)\r\n                if(matchup.maps[i].type === map) {\r\n                    for(let a = 0; a < matchup.maps[i].objectives.length; a++)\r\n                        if(matchup.maps[i].objectives[a].id === id)\r\n                            thisObjective = matchup.maps[i].objectives[a];\r\n                }\r\n\r\n            owner = thisObjective.owner;\r\n        }\r\n\r\n        let mapOld = this.props.map;\r\n        let idOld = this.props.id;\r\n        let matchupOld = this.props.matchup;\r\n\r\n        if(matchupOld.maps) {\r\n            let thisObjective;\r\n            for(let i = 0; i < matchupOld.maps.length; i++)\r\n                if(matchupOld.maps[i].type === mapOld) {\r\n                    for(let a = 0; a < matchupOld.maps[i].objectives.length; a++)\r\n                        if(matchupOld.maps[i].objectives[a].id === idOld)\r\n                            thisObjective = matchupOld.maps[i].objectives[a];\r\n                }\r\n\r\n            newOwner = thisObjective.owner;\r\n        }\r\n\r\n        if(owner !== newOwner) {\r\n            console.log('new owner', newOwner);\r\n            this.setState({ pulse : true }, () => {\r\n            });\r\n            setTimeout(() => {\r\n                this.setState({ pulse : false }, () => {\r\n                });\r\n            }, 10000);\r\n        }\r\n    }\r\n\r\n    render() {    \r\n        \r\n        let { map, objectives, id, matchup, top, left } = this.props;\r\n        let color = 'greyBg';\r\n        let pointsTick = 0;\r\n        let claimedBy;\r\n        let newOwner;\r\n        if(matchup.maps) {\r\n            let thisObjective;\r\n            for(let i = 0; i < matchup.maps.length; i++)\r\n                if(matchup.maps[i].type === map) {\r\n                    for(let a = 0; a < matchup.maps[i].objectives.length; a++)\r\n                        if(matchup.maps[i].objectives[a].id === id)\r\n                            thisObjective = matchup.maps[i].objectives[a];\r\n                }\r\n\r\n            let { owner, points_tick, claimed_by } = thisObjective;\r\n            pointsTick = points_tick;          \r\n            newOwner = owner;\r\n            claimedBy = claimed_by;\r\n            switch(owner) {\r\n                case 'Red' : color = 'redBg'; break;\r\n                case 'Blue' : color = 'blueBg'; break;\r\n                case 'Green' : color = 'greenBg'; break;\r\n                default : color = 'greyBg';\r\n            }\r\n        }\r\n        let pulse1 = classNames({\r\n            [`pulse1${newOwner}`] : this.state.pulse\r\n        });\r\n\r\n        let pulse2 = classNames({\r\n            [`pulse2${newOwner}`] : this.state.pulse\r\n        });\r\n\r\n        return (\r\n            <div className=\"objectiveContainer\" style={{\r\n                top : top,\r\n                left : left,\r\n            }}>\r\n                <div className={pulse1}/>\r\n                <div className={pulse2}/>\r\n                   <img className={classNames({\r\n                       [color] : true,\r\n                       'objective' : true\r\n                   })} src=\"/img/tower.png\" alt=\"Tower\"/>\r\n                   {pointsTick === 10 ? <img src=\"/img/Fortified.png\" alt=\"Fortified\" className=\"fortified\"/> : \"\"}\r\n                   {pointsTick === 8 ? <img src=\"/img/Reinforced.png\" alt=\"Reinforced\" className=\"reinforced\"/> : \"\"}\r\n                   {pointsTick === 6 ? <img src=\"/img/Secured.png\" alt=\"Secured\" className=\"secured\"/> : \"\"}\r\n                   {claimedBy ? <img src=\"/img/claimed.png\" alt=\"claimed\" className=\"claimed\"/> : \"\"}\r\n                </div>\r\n            )\r\n\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nexport default class Keep extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            pulse : false\r\n        }\r\n    }\r\n\r\n    parseDate(dateObj) {\r\n        if(typeof dateObj === 'string')\r\n            dateObj = new Date(dateObj);\r\n        \r\n        return ('00' + dateObj.getHours()).slice(-2) + ':' + ('00' + dateObj.getMinutes()).slice(-2)  + ':' + ('00' + dateObj.getSeconds()).slice(-2);\r\n    }\r\n\r\n    parseFlippedTime(dateObj) {\r\n        if(typeof dateObj === 'string')\r\n            dateObj = new Date(dateObj);\r\n        \r\n        let now = new Date();\r\n        let diff = now.getTime() - dateObj.getTime();\r\n        diff /= 1000;\r\n        let hours = 0, minutes = 0;\r\n        if(diff > 3600) {\r\n            hours = Math.floor(diff / 3600);\r\n            diff = diff % 3600;\r\n        }\r\n        if(diff > 60) {\r\n            minutes = Math.floor(diff / 60);\r\n            diff = diff % 60;\r\n        }\r\n\r\n        let str = '';\r\n\r\n        if(hours)\r\n            str += `${hours} hours`;\r\n\r\n        if(hours && minutes)\r\n            str += ' and';\r\n\r\n        str += ` ${minutes} minutes`;\r\n        return str;\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps, nextState) {\r\n        \r\n        if(this.props.matchup.id === undefined)\r\n            return;\r\n\r\n        let { map, id, matchup } = nextProps;\r\n        let owner;\r\n        let newOwner;\r\n        if(matchup.maps) {\r\n            let thisObjective;\r\n            for(let i = 0; i < matchup.maps.length; i++)\r\n                if(matchup.maps[i].type === map) {\r\n                    for(let a = 0; a < matchup.maps[i].objectives.length; a++)\r\n                        if(matchup.maps[i].objectives[a].id === id)\r\n                            thisObjective = matchup.maps[i].objectives[a];\r\n                }\r\n\r\n            owner = thisObjective.owner;\r\n        }\r\n\r\n        let mapOld = this.props.map;\r\n        let idOld = this.props.id;\r\n        let matchupOld = this.props.matchup;\r\n\r\n        if(matchupOld.maps) {\r\n            let thisObjective;\r\n            for(let i = 0; i < matchupOld.maps.length; i++)\r\n                if(matchupOld.maps[i].type === mapOld) {\r\n                    for(let a = 0; a < matchupOld.maps[i].objectives.length; a++)\r\n                        if(matchupOld.maps[i].objectives[a].id === idOld)\r\n                            thisObjective = matchupOld.maps[i].objectives[a];\r\n                }\r\n\r\n            newOwner = thisObjective.owner;\r\n        }\r\n\r\n        if(owner !== newOwner) {\r\n            this.setState({ pulse : true });\r\n            setTimeout(() => {\r\n                this.setState({ pulse : false });\r\n            }, 10000);\r\n        }\r\n    }\r\n\r\n    render() {    \r\n        \r\n        let { map, objectives, id, matchup, top, left, guilds } = this.props;\r\n        let color = 'greyBg';\r\n        let pointsTick = 0;\r\n        let claimedBy;\r\n        let newOwner;\r\n        let tooltip = [];\r\n        if(matchup.maps) {\r\n            let objective = objectives[id];\r\n            let thisObjective;\r\n            for(let i = 0; i < matchup.maps.length; i++)\r\n                if(matchup.maps[i].type === map) {\r\n                    for(let a = 0; a < matchup.maps[i].objectives.length; a++)\r\n                        if(matchup.maps[i].objectives[a].id === id)\r\n                            thisObjective = matchup.maps[i].objectives[a];\r\n                }\r\n\r\n            let { owner, points_tick, claimed_by, last_flipped, yaks_delivered } = thisObjective;\r\n            pointsTick = points_tick;\r\n            newOwner = owner;\r\n            claimedBy = claimed_by;\r\n            switch(owner) {\r\n                case 'Red' : color = 'redBg'; break;\r\n                case 'Blue' : color = 'blueBg'; break;\r\n                case 'Green' : color = 'greenBg'; break;\r\n                default : color = 'greyBg';\r\n            }\r\n\r\n            tooltip.push(<div>{objective.name}</div>);\r\n            if(claimed_by && guilds[claimed_by]) {\r\n                let guild = guilds[claimed_by];\r\n                let guildImage = guild.name.replace(/ /g, '-');\r\n                tooltip.push(\r\n                    <div>\r\n                        <span>Claimed by:</span><br/>\r\n                        <img src={`https://guilds.gw2w2w.com/guilds/${guildImage}/160.svg`}/><br/>\r\n                        <span>{guilds[claimed_by].name} [{guilds[claimed_by].tag}]</span>\r\n                    </div>\r\n                );\r\n            }\r\n            tooltip.push(<div>Flipped {this.parseFlippedTime(new Date(last_flipped))} ago.</div>);\r\n            tooltip.push(<div>Dolyaks: {yaks_delivered} / 140</div>);\r\n            tooltip.push(<div>Points per Tick: {points_tick}</div>);\r\n        }\r\n\r\n        return (\r\n            <Tooltip title={(<div>{tooltip}</div>)} placement=\"top\">\r\n            <div className=\"objectiveContainer\" style={{\r\n                    top : top,\r\n                    left : left,\r\n                }}>\r\n                    <div className={classNames({\r\n                        [`pulse1${newOwner}`] : this.state.pulse\r\n                    })}/>\r\n                    <div className={classNames({\r\n                        [`pulse2${newOwner}`] : this.state.pulse\r\n                    })}/>\r\n                    <img className={classNames({\r\n                        [color] : true,\r\n                        'objective' : true,\r\n                    })} src=\"/img/keep.png\" alt=\"Keep\"/>\r\n                    {pointsTick === 20 ? <img src=\"/img/waypoint.png\" alt=\"waypoint\" className=\"waypoint\"/> : \"\"}\r\n                    {pointsTick === 20 ? <img src=\"/img/Fortified.png\" alt=\"Fortified\" className=\"fortified\"/> : \"\"}\r\n                    {pointsTick === 16 ? <img src=\"/img/Reinforced.png\" alt=\"Reinforced\" className=\"reinforced\"/> : \"\"}\r\n                    {pointsTick === 12 ? <img src=\"/img/Secured.png\" alt=\"Secured\" className=\"secured\"/> : \"\"}\r\n                    {claimedBy ? <img src=\"/img/claimed.png\" alt=\"claimed\" className=\"claimed\"/> : \"\"}\r\n                </div>\r\n            </Tooltip>\r\n        )\r\n\r\n\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\n\r\nexport default class Castle extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            pulse : false\r\n        }\r\n    }\r\n\r\n    parseDate(dateObj) {\r\n        if(typeof dateObj === 'string')\r\n            dateObj = new Date(dateObj);\r\n        \r\n        return ('00' + dateObj.getHours()).slice(-2) + ':' + ('00' + dateObj.getMinutes()).slice(-2)  + ':' + ('00' + dateObj.getSeconds()).slice(-2);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps, nextState) {\r\n        \r\n        if(this.props.matchup.id === undefined)\r\n            return;\r\n\r\n        let { map, id, matchup } = nextProps;\r\n        let owner;\r\n        let newOwner;\r\n        if(matchup.maps) {\r\n            let thisObjective;\r\n            for(let i = 0; i < matchup.maps.length; i++)\r\n                if(matchup.maps[i].type === map) {\r\n                    for(let a = 0; a < matchup.maps[i].objectives.length; a++)\r\n                        if(matchup.maps[i].objectives[a].id === id)\r\n                            thisObjective = matchup.maps[i].objectives[a];\r\n                }\r\n\r\n            owner = thisObjective.owner;\r\n        }\r\n\r\n        let mapOld = this.props.map;\r\n        let idOld = this.props.id;\r\n        let matchupOld = this.props.matchup;\r\n\r\n        if(matchupOld.maps) {\r\n            let thisObjective;\r\n            for(let i = 0; i < matchupOld.maps.length; i++)\r\n                if(matchupOld.maps[i].type === mapOld) {\r\n                    for(let a = 0; a < matchupOld.maps[i].objectives.length; a++)\r\n                        if(matchupOld.maps[i].objectives[a].id === idOld)\r\n                            thisObjective = matchupOld.maps[i].objectives[a];\r\n                }\r\n\r\n            newOwner = thisObjective.owner;\r\n        }\r\n\r\n        if(owner !== newOwner) {\r\n            console.log('new owner', newOwner);\r\n            this.setState({ pulse : true });\r\n            setTimeout(() => {\r\n                this.setState({ pulse : false });\r\n            }, 10000);\r\n        }\r\n    }\r\n\r\n    render() {    \r\n        \r\n        let { map, objectives, id, matchup, top, left } = this.props;\r\n\r\n        let color = 'greyBg';\r\n        let pointsTick = 0;\r\n        let claimedBy;\r\n        let newOwner;\r\n        if(matchup.maps) {\r\n            let objective = objectives[id];\r\n            let thisObjective;\r\n            for(let i = 0; i < matchup.maps.length; i++)\r\n                if(matchup.maps[i].type === map) {\r\n                    for(let a = 0; a < matchup.maps[i].objectives.length; a++)\r\n                        if(matchup.maps[i].objectives[a].id === id)\r\n                            thisObjective = matchup.maps[i].objectives[a];\r\n                }\r\n\r\n            let { owner, points_tick, claimed_by } = thisObjective;\r\n            pointsTick = points_tick;\r\n            newOwner = owner;\r\n            claimedBy = claimed_by;\r\n            switch(owner) {\r\n                case 'Red' : color = 'redBg'; break;\r\n                case 'Blue' : color = 'blueBg'; break;\r\n                case 'Green' : color = 'greenBg'; break;\r\n                default : color = 'greyBg';\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"objectiveContainer\" style={{\r\n                top : top,\r\n                left : left,\r\n            }}>\r\n                <div className={classNames({\r\n                    [`pulse1${newOwner}`] : this.state.pulse\r\n                })}/>\r\n                <div className={classNames({\r\n                    [`pulse2${newOwner}`] : this.state.pulse\r\n                })}/>\r\n                   <img className={classNames({\r\n                       [color] : true,\r\n                       'objective' : true\r\n                   })} src=\"/img/castle.png\" alt=\"Castle\"/>\r\n                    {pointsTick === 20 ? <img src=\"/img/waypoint.png\" alt=\"waypoint\" className=\"waypoint\"/> : \"\"}\r\n                    {pointsTick === 32 ? <img src=\"/img/Fortified.png\" alt=\"Fortified\" className=\"fortified\"/> : \"\"}\r\n                    {pointsTick === 24 ? <img src=\"/img/Reinforced.png\" alt=\"Reinforced\" className=\"reinforced\"/> : \"\"}\r\n                    {pointsTick === 16 ? <img src=\"/img/Secured.png\" alt=\"Secured\" className=\"secured\"/> : \"\"}\r\n                   {claimedBy ? <img src=\"/img/claimed.png\" alt=\"claimed\" className=\"claimed\"/> : \"\"}\r\n                </div>\r\n            )\r\n\r\n    }\r\n}","import React, { Component } from 'react';\nimport './App.css';\nimport WorldSelector from './components/WorldSelector';\nimport MatchupLog from './components/MatchupLog';\nimport MatchupStats from './components/MatchupStats';\nimport Gw2Worlds from './gw2apiModels/Gw2Worlds';\nimport Gw2Guild from './gw2apiModels/Gw2Guild';\n\nimport RequestHandler from './lib/RequestHandler';\n\nimport Camp from './components/Objectives/Camp';\nimport Tower from './components/Objectives/Tower';\nimport Keep from './components/Objectives/Keep';\nimport Castle from './components/Objectives/Castle';\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            objectives : {},\n            guilds : {},\n            world : 0,\n            linkedWorlds : [],\n            worlds : {},\n            ready : 0,\n            region : 0,\n            tier : 0,\n            color : '',\n            matchup : {},\n            skirmish : {},\n            skirmishStart : 0,\n            timeout : null,\n            objectivesLastFlipped : {},\n            objectivesLastClaimed : {},\n            matchupLog : [],\n        };\n        this.request = new RequestHandler();\n    }\n\n    async componentDidMount() {\n        let result = await Gw2Worlds.getAll();\n        let worlds = {};\n        for(let index in result) {\n            let world = result[index];\n            worlds[world.id] = world;\n        }\n\n        result = await this.request.get(`https://api.guildwars2.com/v2/wvw/objectives?ids=all&lang=en`);\n        let objectives = {};\n\n        for(let index in result) {\n            let objective = result[index];\n            objectives[objective.id] = objective;\n        }\n\n        this.setState({ worlds : worlds, objectives : objectives, ready : 1 });\n    }\n\n    async getMatchup() {\n        let { region, tier, matchup, skirmish, world, objectivesLastClaimed, objectivesLastFlipped, matchupLog, guilds } = this.state;\n        let newMatchup;\n        let skirmishStart\n        if(region && tier) {\n            newMatchup = await this.request.get(`https://api.guildwars2.com/v2/wvw/matches?id=${region}-${tier}`);\n\n            if(newMatchup instanceof Error) {\n                let timeout = setTimeout(() => {\n                    this.getMatchup();\n                }, 10000);\n                this.setState({ timeout : timeout });\n                return;\n            }\n\n            console.log(matchup, newMatchup);\n\n            if(matchup.start_time !== newMatchup.start_time) {\n                console.log('reset matchup');\n                // reset matchup\n                skirmish = newMatchup;\n                matchup = newMatchup;\n                this.setWorld(world);\n                return;\n            }\n\n            if(matchup.skirmishes.length !== newMatchup.skirmishes.length) {\n                console.log('reset skirmish');\n                skirmish = newMatchup;\n                matchup = newMatchup;\n            }\n\n            let { start_time, maps } = newMatchup;\n            let startTime = new Date(start_time);\n            skirmishStart = new Date(startTime.getTime() + ((newMatchup.skirmishes.length - 1) * 2 * 60 * 60 * 1000));\n            for(let mapId in maps) {\n                let map = maps[mapId];\n                let { objectives } = map;\n                for (let i = 0; i < objectives.length; i++) {\n                    let objective = objectives[i];\n                    let {\n                        id,\n                        owner,\n                        last_flipped,\n                        claimed_by,\n                        claimed_at\n                    } = objective;\n                    let index = `${id}`;\n    \n                    if(claimed_by && !guilds[claimed_by]) {\n                        let guild = await Gw2Guild.getById(claimed_by);\n                        guilds[claimed_by] = guild;\n                    }\n                    // last flipped\n                    let skipFlipped = false;\n                    if (!objectivesLastFlipped[index]) {\n                        objectivesLastFlipped[index] = new Date(last_flipped);\n                        if (claimed_at)\n                            objectivesLastClaimed[index] = new Date(claimed_at).getTime();\n                        skipFlipped = true;\n                    }\n    \n    \n                    if (objectivesLastFlipped[index].getTime() !== new Date(last_flipped).getTime() && !skipFlipped) {\n                        let now = new Date();\n                        let flippedBeforeSec = (now.getTime() - new Date(last_flipped).getTime()) / 1000;\n                        objectivesLastFlipped[index] = new Date(last_flipped);\n                        if (flippedBeforeSec < 0)\n                            flippedBeforeSec = 0;\n                        console.log('flipped');\n                        matchupLog.push({\n                            map : map.type,\n                            type : 'flipped',\n                            owner : owner,\n                            flipped : last_flipped,\n                            flippedBeforeSec : flippedBeforeSec,\n                            objectiveId : objective.id\n                        });\n                    }\n    \n                    if (claimed_at && !skipFlipped) {\n                        if (objectivesLastClaimed[index] !== new Date(claimed_at).getTime()) {\n                            let now = new Date();\n                            objectivesLastClaimed[index] = new Date(claimed_at).getTime();\n                            let claimedBeforeSec = (now.getTime() - objectivesLastClaimed[index]) / 1000;\n                            if (claimedBeforeSec < 0)\n                                claimedBeforeSec = 0;\n                            console.log('claimed', claimed_by);\n                            let guild = await Gw2Guild.getById(claimed_by);\n                            guilds[guild.id] = guild;\n                            matchupLog.push({\n                                map : map.type,\n                                type : 'claimed',\n                                owner : owner,\n                                claimed : claimed_at,\n                                claimed_by : claimed_by,\n                                claimedBeforeSec : claimedBeforeSec,\n                                objectiveId : objective.id\n                            });\n                        }\n                    }\n                }\n            }\n        }\n\n        let timeout = setTimeout(() => {\n            this.getMatchup();\n        }, 5000);\n\n        if(newMatchup)\n            this.setState({\n                matchup : newMatchup,\n                timeout : timeout,\n                skirmishStart : skirmishStart,\n                objectivesLastClaimed : objectivesLastClaimed,\n                objectivesLastFlipped : objectivesLastFlipped,\n                matchupLog : matchupLog,\n                guilds : guilds,\n            });\n        \n    }\n\n    async setWorld(id) {\n        id = parseInt(id, 10); \n        let result = await this.request.get(`https://api.guildwars2.com/v2/wvw/matches?ids=all&_=${new Date().getTime()}`);\n        if(result.length === undefined || result instanceof Error) {\n            alert('There is a problem with the Guild Wars 2 API or your network connection.')\n            return;\n        }\n        let selectedMatch;\n        let color;\n        let linkedWorlds;\n        for(let match of result) {\n            let { all_worlds } = match;\n            let worlds = all_worlds.red.concat(all_worlds.blue, all_worlds.green);\n            if(worlds.includes(id)) {\n                selectedMatch = match;\n                if(all_worlds.red.includes(id))\n                    color = 'red';\n                else if(all_worlds.blue.includes(id))\n                    color = 'blue';\n                else if(all_worlds.green.includes(id))\n                    color = 'green';\n\n                linkedWorlds = all_worlds;\n            }\n        }\n\n        let matchId = selectedMatch.id;\n        let [region, tier] = matchId.split('-');\n\n        this.setState({ world : id, matchup : selectedMatch, region : region, tier : tier, skirmish : selectedMatch, color : color, linkedWorlds : linkedWorlds });\n        this.getMatchup();\n    }\n\n    resetWorld() {\n        this.setState({ world : 0 });\n    }\n\n    render() {\n\n        if(!this.state.ready)\n            return (<div></div>)\n\n        return (\n            <div className=\"App\">\n                <div style={{\n                    position : 'relative'\n                }}>\n                    <WorldSelector color={this.state.color} linkedWorlds={this.state.linkedWorlds} world={this.state.world} worlds={this.state.worlds} setWorld={(id) => this.setWorld(id)}/>\n                    <MatchupLog objectives={this.state.objectives} world={this.state.world} log={this.state.matchupLog} guilds={this.state.guilds}/>\n                    <MatchupStats color={this.state.color} worlds={this.state.worlds} linkedWorlds={this.state.linkedWorlds} world={this.state.world} matchup={this.state.matchup}/>\n\n                    <img src={'/img/hybrid-1-desert-4096.jpg'} alt=\"\" style={{ width : '100%'}}/>\n\n                    <div className=\"red-map\">\n                        <h2 className=\"redBorderHeading\">Red BL</h2>\n                        <Camp top={'13.5%'} left={'51%'} matchup={this.state.matchup} id={'1099-99'} objectives={this.state.objectives} map={'RedHome'} guilds={this.state.guilds}/>\n                        <Camp top={'18.2%'} left={'39%'} matchup={this.state.matchup} id={'1099-115'} objectives={this.state.objectives} map={'RedHome'} guilds={this.state.guilds}/>\n                        <Camp top={'19.8%'} left={'63.8%'} matchup={this.state.matchup} id={'1099-109'} objectives={this.state.objectives} map={'RedHome'} guilds={this.state.guilds}/>\n                        <Camp top={'35.5%'} left={'41%'} matchup={this.state.matchup} id={'1099-101'} objectives={this.state.objectives} map={'RedHome'} guilds={this.state.guilds}/>\n                        <Camp top={'36.7%'} left={'62.3%'} matchup={this.state.matchup} id={'1099-100'} objectives={this.state.objectives} map={'RedHome'} guilds={this.state.guilds}/>\n                        <Camp top={'42.7%'} left={'50.5%'} matchup={this.state.matchup} id={'1099-116'} objectives={this.state.objectives} map={'RedHome'} guilds={this.state.guilds}/>\n\n                        <Tower top={'13.5%'} left={'43%'} matchup={this.state.matchup} id={'1099-102'} objectives={this.state.objectives} map={'RedHome'} guilds={this.state.guilds}/>\n                        <Tower top={'15%'} left={'60.7%'} matchup={this.state.matchup} id={'1099-104'} objectives={this.state.objectives} map={'RedHome'} guilds={this.state.guilds}/>\n                        <Tower top={'38.9%'} left={'56.1%'} matchup={this.state.matchup} id={'1099-105'} objectives={this.state.objectives} map={'RedHome'} guilds={this.state.guilds}/>\n                        <Tower top={'36.5%'} left={'46.5%'} matchup={this.state.matchup} id={'1099-110'} objectives={this.state.objectives} map={'RedHome'} guilds={this.state.guilds}/>\n\n                        <Keep top={'21%'} left={'51.5%'} matchup={this.state.matchup} id={'1099-113'} objectives={this.state.objectives} map={'RedHome'} guilds={this.state.guilds}/>\n                        <Keep top={'27.5%'} left={'38.5%'} matchup={this.state.matchup} id={'1099-106'} objectives={this.state.objectives} map={'RedHome'} guilds={this.state.guilds}/>\n                        <Keep top={'28.5%'} left={'64%'} matchup={this.state.matchup} id={'1099-114'} objectives={this.state.objectives} map={'RedHome'} guilds={this.state.guilds}/>\n                    </div>\n                    \n                    <div className=\"blue-map\">\n                        <h2 className=\"blueBorderHeading\">Blue BL</h2>\n                        <Camp top={'34.5%'} left={'82%'} matchup={this.state.matchup} id={'96-39'} objectives={this.state.objectives} map={'BlueHome'} guilds={this.state.guilds}/>\n                        <Camp top={'47.5%'} left={'74%'} matchup={this.state.matchup} id={'96-52'} objectives={this.state.objectives} map={'BlueHome'} guilds={this.state.guilds}/>\n                        <Camp top={'47%'} left={'91.5%'} matchup={this.state.matchup} id={'96-51'} objectives={this.state.objectives} map={'BlueHome'} guilds={this.state.guilds}/>\n                        <Camp top={'64.5%'} left={'74.5%'} matchup={this.state.matchup} id={'96-53'} objectives={this.state.objectives} map={'BlueHome'} guilds={this.state.guilds}/>\n                        <Camp top={'63.5%'} left={'90.5%'} matchup={this.state.matchup} id={'96-50'} objectives={this.state.objectives} map={'BlueHome'} guilds={this.state.guilds}/>\n                        <Camp top={'71.5%'} left={'82.0%'} matchup={this.state.matchup} id={'96-34'} objectives={this.state.objectives} map={'BlueHome'} guilds={this.state.guilds}/>\n\n                        <Tower top={'45.5%'} left={'76.5%'} matchup={this.state.matchup} id={'96-38'} objectives={this.state.objectives} map={'BlueHome'} guilds={this.state.guilds}/>\n                        <Tower top={'45.5%'} left={'87.5%'} matchup={this.state.matchup} id={'96-40'} objectives={this.state.objectives} map={'BlueHome'} guilds={this.state.guilds}/>\n                        <Tower top={'63%'} left={'78.5%'} matchup={this.state.matchup} id={'96-35'} objectives={this.state.objectives} map={'BlueHome'} guilds={this.state.guilds}/>\n                        <Tower top={'63%'} left={'86.5%'} matchup={this.state.matchup} id={'96-36'} objectives={this.state.objectives} map={'BlueHome'} guilds={this.state.guilds}/>\n\n                        <Keep top={'50%'} left={'82%'} matchup={this.state.matchup} id={'96-37'} objectives={this.state.objectives} map={'BlueHome'} guilds={this.state.guilds}/>\n                        <Keep top={'57%'} left={'72.5%'} matchup={this.state.matchup} id={'96-33'} objectives={this.state.objectives} map={'BlueHome'} guilds={this.state.guilds}/>\n                        <Keep top={'56%'} left={'92.5%'} matchup={this.state.matchup} id={'96-32'} objectives={this.state.objectives} map={'BlueHome'} guilds={this.state.guilds}/>\n                    </div>\n\n                    <div className=\"green-map\">\n                        <h2 className=\"greenBorderHeading\">Green BL</h2>\n                        <Camp top={'43.5%'} left={'16.5%'} matchup={this.state.matchup} id={'95-39'} objectives={this.state.objectives} map={'GreenHome'} guilds={this.state.guilds}/>\n                        <Camp top={'55.5%'} left={'7.5%'} matchup={this.state.matchup} id={'95-52'} objectives={this.state.objectives} map={'GreenHome'} guilds={this.state.guilds}/>\n                        <Camp top={'55.5%'} left={'25.5%'} matchup={this.state.matchup} id={'95-51'} objectives={this.state.objectives} map={'GreenHome'} guilds={this.state.guilds}/>\n                        <Camp top={'72.5%'} left={'8.5%'} matchup={this.state.matchup} id={'95-53'} objectives={this.state.objectives} map={'GreenHome'} guilds={this.state.guilds}/>\n                        <Camp top={'72%'} left={'24.5%'} matchup={this.state.matchup} id={'95-50'} objectives={this.state.objectives} map={'GreenHome'} guilds={this.state.guilds}/>\n                        <Camp top={'80.5%'} left={'16%'} matchup={this.state.matchup} id={'95-34'} objectives={this.state.objectives} map={'GreenHome'} guilds={this.state.guilds}/>\n\n                        <Tower top={'53.5%'} left={'10.5%'} matchup={this.state.matchup} id={'95-38'} objectives={this.state.objectives} map={'GreenHome'} guilds={this.state.guilds}/>\n                        <Tower top={'53.5%'} left={'21.5%'} matchup={this.state.matchup} id={'95-40'} objectives={this.state.objectives} map={'GreenHome'} guilds={this.state.guilds}/>\n                        <Tower top={'71%'} left={'12.5%'} matchup={this.state.matchup} id={'95-35'} objectives={this.state.objectives} map={'GreenHome'} guilds={this.state.guilds}/>\n                        <Tower top={'71%'} left={'20.5%'} matchup={this.state.matchup} id={'95-36'} objectives={this.state.objectives} map={'GreenHome'} guilds={this.state.guilds}/>\n\n                        <Keep top={'58.5%'} left={'16%'} matchup={this.state.matchup} id={'95-37'} objectives={this.state.objectives} map={'GreenHome'} guilds={this.state.guilds}/>\n                        <Keep top={'65.5%'} left={'6.5%'} matchup={this.state.matchup} id={'95-33'} objectives={this.state.objectives} map={'GreenHome'} guilds={this.state.guilds}/>\n                        <Keep top={'64%'} left={'26.5%'} matchup={this.state.matchup} id={'95-32'} objectives={this.state.objectives} map={'GreenHome'} guilds={this.state.guilds}/>\n                    </div>\n                    \n                    <div className=\"center-map\">\n                        <h2 className=\"ebgHeading\">EBG</h2>\n                        <Camp top={'64.5%'} left={'42.5%'} matchup={this.state.matchup} id={'38-6'} objectives={this.state.objectives} map={'Center'} guilds={this.state.guilds}/>\n                        <Camp top={'67.5%'} left={'56.5%'} matchup={this.state.matchup} id={'38-5'} objectives={this.state.objectives} map={'Center'} guilds={this.state.guilds}/>\n                        <Camp top={'75.5%'} left={'40.5%'} matchup={this.state.matchup} id={'38-10'} objectives={this.state.objectives} map={'Center'} guilds={this.state.guilds}/>\n                        <Camp top={'88.5%'} left={'46.5%'} matchup={this.state.matchup} id={'38-4'} objectives={this.state.objectives} map={'Center'} guilds={this.state.guilds}/>\n                        <Camp top={'90.5%'} left={'53.5%'} matchup={this.state.matchup} id={'38-7'} objectives={this.state.objectives} map={'Center'} guilds={this.state.guilds}/>\n                        <Camp top={'76.5%'} left={'59.5%'} matchup={this.state.matchup} id={'38-8'} objectives={this.state.objectives} map={'Center'} guilds={this.state.guilds}/>\n\n                        <Tower top={'63.5%'} left={'47%'} matchup={this.state.matchup} id={'38-17'} objectives={this.state.objectives} map={'Center'} guilds={this.state.guilds}/>\n                        <Tower top={'64.5%'} left={'54.5%'} matchup={this.state.matchup} id={'38-20'} objectives={this.state.objectives} map={'Center'} guilds={this.state.guilds}/>\n                        <Tower top={'69%'} left={'54%'} matchup={this.state.matchup} id={'38-19'} objectives={this.state.objectives} map={'Center'} guilds={this.state.guilds}/>\n                        <Tower top={'70.5%'} left={'46.5%'} matchup={this.state.matchup} id={'38-18'} objectives={this.state.objectives} map={'Center'} guilds={this.state.guilds}/>\n\n                        <Tower top={'80.5%'} left={'38.5%'} matchup={this.state.matchup} id={'38-11'} objectives={this.state.objectives} map={'Center'} guilds={this.state.guilds}/>\n                        <Tower top={'88.5%'} left={'43.5%'} matchup={this.state.matchup} id={'38-13'} objectives={this.state.objectives} map={'Center'} guilds={this.state.guilds}/>\n                        <Tower top={'84%'} left={'47.5%'} matchup={this.state.matchup} id={'38-13'} objectives={this.state.objectives} map={'Center'} guilds={this.state.guilds}/>\n                        <Tower top={'77.5%'} left={'44.5%'} matchup={this.state.matchup} id={'38-12'} objectives={this.state.objectives} map={'Center'} guilds={this.state.guilds}/>\n\n                        <Tower top={'86%'} left={'52.5%'} matchup={this.state.matchup} id={'38-16'} objectives={this.state.objectives} map={'Center'} guilds={this.state.guilds}/>\n                        <Tower top={'89.5%'} left={'57.5%'} matchup={this.state.matchup} id={'38-15'} objectives={this.state.objectives} map={'Center'} guilds={this.state.guilds}/>\n                        <Tower top={'80.5%'} left={'60.5%'} matchup={this.state.matchup} id={'38-22'} objectives={this.state.objectives} map={'Center'} guilds={this.state.guilds}/>\n                        <Tower top={'77.5%'} left={'56%'} matchup={this.state.matchup} id={'38-21'} objectives={this.state.objectives} map={'Center'} guilds={this.state.guilds}/>\n\n                        <Keep top={'66.5%'} left={'51.5%'} matchup={this.state.matchup} id={'38-1'} objectives={this.state.objectives} map={'Center'} guilds={this.state.guilds}/>\n                        <Keep top={'84.5%'} left={'41%'} matchup={this.state.matchup} id={'38-3'} objectives={this.state.objectives} map={'Center'} guilds={this.state.guilds}/>\n                        <Keep top={'84.5%'} left={'58.5%'} matchup={this.state.matchup} id={'38-2'} objectives={this.state.objectives} map={'Center'} guilds={this.state.guilds}/>\n\n                        <Castle top={'77.5%'} left={'50%'} matchup={this.state.matchup} id={'38-9'} objectives={this.state.objectives} map={'Center'} guilds={this.state.guilds}/>\n                    </div>\n                </div>\n                \n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}